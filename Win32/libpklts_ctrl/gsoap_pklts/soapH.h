/* soapH.h
   Generated by gSOAP 2.8.18 from gsoap_pklts.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_byte(soap, data),0) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_short
#define SOAP_TYPE_short (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_short(struct soap*, short *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_short(struct soap*, const char*, int, const short *, const char*);
SOAP_FMAC3 short * SOAP_FMAC4 soap_in_short(struct soap*, const char*, short *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_short(struct soap*, const short *, const char*, const char*);

#ifndef soap_write_short
#define soap_write_short(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_short(soap, data),0) || soap_put_short(soap, data, "short", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 short * SOAP_FMAC4 soap_get_short(struct soap*, short *, const char*, const char*);

#ifndef soap_read_short
#define soap_read_short(soap, data) ( soap_begin_recv(soap) || !soap_get_short(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_int(soap, data),0) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_unsignedByte
#define SOAP_TYPE_unsignedByte (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedByte(struct soap*, unsigned char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_unsignedByte(struct soap*, const char*, unsigned char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#ifndef soap_write_unsignedByte
#define soap_write_unsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_unsignedByte(soap, data),0) || soap_put_unsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef soap_read_unsignedByte
#define soap_read_unsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_unsignedShort
#define SOAP_TYPE_unsignedShort (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedShort(struct soap*, unsigned short *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedShort(struct soap*, const char*, int, const unsigned short *, const char*);
SOAP_FMAC3 unsigned short * SOAP_FMAC4 soap_in_unsignedShort(struct soap*, const char*, unsigned short *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedShort(struct soap*, const unsigned short *, const char*, const char*);

#ifndef soap_write_unsignedShort
#define soap_write_unsignedShort(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_unsignedShort(soap, data),0) || soap_put_unsignedShort(soap, data, "unsignedShort", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned short * SOAP_FMAC4 soap_get_unsignedShort(struct soap*, unsigned short *, const char*, const char*);

#ifndef soap_read_unsignedShort
#define soap_read_unsignedShort(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedShort(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_unsignedInt
#define SOAP_TYPE_unsignedInt (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedInt(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_write_unsignedInt
#define soap_write_unsignedInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_unsignedInt(soap, data),0) || soap_put_unsignedInt(soap, data, "unsignedInt", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

#ifndef soap_read_unsignedInt
#define soap_read_unsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedInt(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns__ErrMessage
#define SOAP_TYPE_ns__ErrMessage (7)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__ErrMessage(struct soap*, enum ns__ErrMessage *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__ErrMessage(struct soap*, const char*, int, const enum ns__ErrMessage *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns__ErrMessage2s(struct soap*, enum ns__ErrMessage);
SOAP_FMAC3 enum ns__ErrMessage * SOAP_FMAC4 soap_in_ns__ErrMessage(struct soap*, const char*, enum ns__ErrMessage *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns__ErrMessage(struct soap*, const char*, enum ns__ErrMessage *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__ErrMessage(struct soap*, const enum ns__ErrMessage *, const char*, const char*);

#ifndef soap_write_ns__ErrMessage
#define soap_write_ns__ErrMessage(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns__ErrMessage(soap, data),0) || soap_put_ns__ErrMessage(soap, data, "ns:ErrMessage", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum ns__ErrMessage * SOAP_FMAC4 soap_get_ns__ErrMessage(struct soap*, enum ns__ErrMessage *, const char*, const char*);

#ifndef soap_read_ns__ErrMessage
#define soap_read_ns__ErrMessage(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__ErrMessage(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (73)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data),0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (72)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data),0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (69)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data),0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (67)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data),0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (66)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data),0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_ns__deviceCtrl
#define SOAP_TYPE_ns__deviceCtrl (65)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__deviceCtrl(struct soap*, struct ns__deviceCtrl *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__deviceCtrl(struct soap*, const struct ns__deviceCtrl *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__deviceCtrl(struct soap*, const char*, int, const struct ns__deviceCtrl *, const char*);
SOAP_FMAC3 struct ns__deviceCtrl * SOAP_FMAC4 soap_in_ns__deviceCtrl(struct soap*, const char*, struct ns__deviceCtrl *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__deviceCtrl(struct soap*, const struct ns__deviceCtrl *, const char*, const char*);

#ifndef soap_write_ns__deviceCtrl
#define soap_write_ns__deviceCtrl(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns__deviceCtrl(soap, data),0) || soap_put_ns__deviceCtrl(soap, data, "ns:deviceCtrl", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__deviceCtrl * SOAP_FMAC4 soap_get_ns__deviceCtrl(struct soap*, struct ns__deviceCtrl *, const char*, const char*);

#ifndef soap_read_ns__deviceCtrl
#define soap_read_ns__deviceCtrl(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__deviceCtrl(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns__deviceCtrl * SOAP_FMAC2 soap_instantiate_ns__deviceCtrl(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__deviceCtrl * soap_new_ns__deviceCtrl(struct soap *soap, int n = -1) { return soap_instantiate_ns__deviceCtrl(soap, n, NULL, NULL, NULL); }

inline struct ns__deviceCtrl * soap_new_req_ns__deviceCtrl(struct soap *soap) { struct ns__deviceCtrl *_p = soap_instantiate_ns__deviceCtrl(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__deviceCtrl(soap, _p); } return _p; }

inline struct ns__deviceCtrl * soap_new_set_ns__deviceCtrl(struct soap *soap, struct ns__DeviceCtrlReq *pInData) { struct ns__deviceCtrl *_p = soap_instantiate_ns__deviceCtrl(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__deviceCtrl(soap, _p); _p->pInData = pInData; } return _p; }

inline void soap_delete_ns__deviceCtrl(struct soap *soap, struct ns__deviceCtrl *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__deviceCtrl(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__setDeviceParam
#define SOAP_TYPE_ns__setDeviceParam (61)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__setDeviceParam(struct soap*, struct ns__setDeviceParam *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__setDeviceParam(struct soap*, const struct ns__setDeviceParam *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__setDeviceParam(struct soap*, const char*, int, const struct ns__setDeviceParam *, const char*);
SOAP_FMAC3 struct ns__setDeviceParam * SOAP_FMAC4 soap_in_ns__setDeviceParam(struct soap*, const char*, struct ns__setDeviceParam *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__setDeviceParam(struct soap*, const struct ns__setDeviceParam *, const char*, const char*);

#ifndef soap_write_ns__setDeviceParam
#define soap_write_ns__setDeviceParam(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns__setDeviceParam(soap, data),0) || soap_put_ns__setDeviceParam(soap, data, "ns:setDeviceParam", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__setDeviceParam * SOAP_FMAC4 soap_get_ns__setDeviceParam(struct soap*, struct ns__setDeviceParam *, const char*, const char*);

#ifndef soap_read_ns__setDeviceParam
#define soap_read_ns__setDeviceParam(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__setDeviceParam(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns__setDeviceParam * SOAP_FMAC2 soap_instantiate_ns__setDeviceParam(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__setDeviceParam * soap_new_ns__setDeviceParam(struct soap *soap, int n = -1) { return soap_instantiate_ns__setDeviceParam(soap, n, NULL, NULL, NULL); }

inline struct ns__setDeviceParam * soap_new_req_ns__setDeviceParam(struct soap *soap) { struct ns__setDeviceParam *_p = soap_instantiate_ns__setDeviceParam(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__setDeviceParam(soap, _p); } return _p; }

inline struct ns__setDeviceParam * soap_new_set_ns__setDeviceParam(struct soap *soap, struct ns__setDeviceParamReq *pInData) { struct ns__setDeviceParam *_p = soap_instantiate_ns__setDeviceParam(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__setDeviceParam(soap, _p); _p->pInData = pInData; } return _p; }

inline void soap_delete_ns__setDeviceParam(struct soap *soap, struct ns__setDeviceParam *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__setDeviceParam(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__getDeviceParam
#define SOAP_TYPE_ns__getDeviceParam (57)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__getDeviceParam(struct soap*, struct ns__getDeviceParam *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__getDeviceParam(struct soap*, const struct ns__getDeviceParam *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__getDeviceParam(struct soap*, const char*, int, const struct ns__getDeviceParam *, const char*);
SOAP_FMAC3 struct ns__getDeviceParam * SOAP_FMAC4 soap_in_ns__getDeviceParam(struct soap*, const char*, struct ns__getDeviceParam *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__getDeviceParam(struct soap*, const struct ns__getDeviceParam *, const char*, const char*);

#ifndef soap_write_ns__getDeviceParam
#define soap_write_ns__getDeviceParam(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns__getDeviceParam(soap, data),0) || soap_put_ns__getDeviceParam(soap, data, "ns:getDeviceParam", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__getDeviceParam * SOAP_FMAC4 soap_get_ns__getDeviceParam(struct soap*, struct ns__getDeviceParam *, const char*, const char*);

#ifndef soap_read_ns__getDeviceParam
#define soap_read_ns__getDeviceParam(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__getDeviceParam(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns__getDeviceParam * SOAP_FMAC2 soap_instantiate_ns__getDeviceParam(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__getDeviceParam * soap_new_ns__getDeviceParam(struct soap *soap, int n = -1) { return soap_instantiate_ns__getDeviceParam(soap, n, NULL, NULL, NULL); }

inline struct ns__getDeviceParam * soap_new_req_ns__getDeviceParam(struct soap *soap) { struct ns__getDeviceParam *_p = soap_instantiate_ns__getDeviceParam(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__getDeviceParam(soap, _p); } return _p; }

inline struct ns__getDeviceParam * soap_new_set_ns__getDeviceParam(struct soap *soap, struct ns__GetDeviceParamReq *pInBuf) { struct ns__getDeviceParam *_p = soap_instantiate_ns__getDeviceParam(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__getDeviceParam(soap, _p); _p->pInBuf = pInBuf; } return _p; }

inline void soap_delete_ns__getDeviceParam(struct soap *soap, struct ns__getDeviceParam *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__getDeviceParam(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__getDeviceList
#define SOAP_TYPE_ns__getDeviceList (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__getDeviceList(struct soap*, struct ns__getDeviceList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__getDeviceList(struct soap*, const struct ns__getDeviceList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__getDeviceList(struct soap*, const char*, int, const struct ns__getDeviceList *, const char*);
SOAP_FMAC3 struct ns__getDeviceList * SOAP_FMAC4 soap_in_ns__getDeviceList(struct soap*, const char*, struct ns__getDeviceList *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__getDeviceList(struct soap*, const struct ns__getDeviceList *, const char*, const char*);

#ifndef soap_write_ns__getDeviceList
#define soap_write_ns__getDeviceList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns__getDeviceList(soap, data),0) || soap_put_ns__getDeviceList(soap, data, "ns:getDeviceList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__getDeviceList * SOAP_FMAC4 soap_get_ns__getDeviceList(struct soap*, struct ns__getDeviceList *, const char*, const char*);

#ifndef soap_read_ns__getDeviceList
#define soap_read_ns__getDeviceList(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__getDeviceList(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns__getDeviceList * SOAP_FMAC2 soap_instantiate_ns__getDeviceList(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__getDeviceList * soap_new_ns__getDeviceList(struct soap *soap, int n = -1) { return soap_instantiate_ns__getDeviceList(soap, n, NULL, NULL, NULL); }

inline struct ns__getDeviceList * soap_new_req_ns__getDeviceList(struct soap *soap) { struct ns__getDeviceList *_p = soap_instantiate_ns__getDeviceList(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__getDeviceList(soap, _p); } return _p; }

inline struct ns__getDeviceList * soap_new_set_ns__getDeviceList(struct soap *soap, struct ns__GetDeviceListReq *pInData) { struct ns__getDeviceList *_p = soap_instantiate_ns__getDeviceList(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__getDeviceList(soap, _p); _p->pInData = pInData; } return _p; }

inline void soap_delete_ns__getDeviceList(struct soap *soap, struct ns__getDeviceList *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__getDeviceList(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__removeDevice
#define SOAP_TYPE_ns__removeDevice (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__removeDevice(struct soap*, struct ns__removeDevice *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__removeDevice(struct soap*, const struct ns__removeDevice *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__removeDevice(struct soap*, const char*, int, const struct ns__removeDevice *, const char*);
SOAP_FMAC3 struct ns__removeDevice * SOAP_FMAC4 soap_in_ns__removeDevice(struct soap*, const char*, struct ns__removeDevice *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__removeDevice(struct soap*, const struct ns__removeDevice *, const char*, const char*);

#ifndef soap_write_ns__removeDevice
#define soap_write_ns__removeDevice(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns__removeDevice(soap, data),0) || soap_put_ns__removeDevice(soap, data, "ns:removeDevice", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__removeDevice * SOAP_FMAC4 soap_get_ns__removeDevice(struct soap*, struct ns__removeDevice *, const char*, const char*);

#ifndef soap_read_ns__removeDevice
#define soap_read_ns__removeDevice(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__removeDevice(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns__removeDevice * SOAP_FMAC2 soap_instantiate_ns__removeDevice(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__removeDevice * soap_new_ns__removeDevice(struct soap *soap, int n = -1) { return soap_instantiate_ns__removeDevice(soap, n, NULL, NULL, NULL); }

inline struct ns__removeDevice * soap_new_req_ns__removeDevice(struct soap *soap) { struct ns__removeDevice *_p = soap_instantiate_ns__removeDevice(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__removeDevice(soap, _p); } return _p; }

inline struct ns__removeDevice * soap_new_set_ns__removeDevice(struct soap *soap, struct ns__RemoveDeviceReq *pInData) { struct ns__removeDevice *_p = soap_instantiate_ns__removeDevice(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__removeDevice(soap, _p); _p->pInData = pInData; } return _p; }

inline void soap_delete_ns__removeDevice(struct soap *soap, struct ns__removeDevice *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__removeDevice(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__setHostDetails
#define SOAP_TYPE_ns__setHostDetails (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__setHostDetails(struct soap*, struct ns__setHostDetails *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__setHostDetails(struct soap*, const struct ns__setHostDetails *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__setHostDetails(struct soap*, const char*, int, const struct ns__setHostDetails *, const char*);
SOAP_FMAC3 struct ns__setHostDetails * SOAP_FMAC4 soap_in_ns__setHostDetails(struct soap*, const char*, struct ns__setHostDetails *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__setHostDetails(struct soap*, const struct ns__setHostDetails *, const char*, const char*);

#ifndef soap_write_ns__setHostDetails
#define soap_write_ns__setHostDetails(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns__setHostDetails(soap, data),0) || soap_put_ns__setHostDetails(soap, data, "ns:setHostDetails", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__setHostDetails * SOAP_FMAC4 soap_get_ns__setHostDetails(struct soap*, struct ns__setHostDetails *, const char*, const char*);

#ifndef soap_read_ns__setHostDetails
#define soap_read_ns__setHostDetails(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__setHostDetails(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns__setHostDetails * SOAP_FMAC2 soap_instantiate_ns__setHostDetails(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__setHostDetails * soap_new_ns__setHostDetails(struct soap *soap, int n = -1) { return soap_instantiate_ns__setHostDetails(soap, n, NULL, NULL, NULL); }

inline struct ns__setHostDetails * soap_new_req_ns__setHostDetails(struct soap *soap) { struct ns__setHostDetails *_p = soap_instantiate_ns__setHostDetails(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__setHostDetails(soap, _p); } return _p; }

inline struct ns__setHostDetails * soap_new_set_ns__setHostDetails(struct soap *soap, struct ns__SetHostDetailsReq *pInData) { struct ns__setHostDetails *_p = soap_instantiate_ns__setHostDetails(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__setHostDetails(soap, _p); _p->pInData = pInData; } return _p; }

inline void soap_delete_ns__setHostDetails(struct soap *soap, struct ns__setHostDetails *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__setHostDetails(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__getMACInfo
#define SOAP_TYPE_ns__getMACInfo (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__getMACInfo(struct soap*, struct ns__getMACInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__getMACInfo(struct soap*, const struct ns__getMACInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__getMACInfo(struct soap*, const char*, int, const struct ns__getMACInfo *, const char*);
SOAP_FMAC3 struct ns__getMACInfo * SOAP_FMAC4 soap_in_ns__getMACInfo(struct soap*, const char*, struct ns__getMACInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__getMACInfo(struct soap*, const struct ns__getMACInfo *, const char*, const char*);

#ifndef soap_write_ns__getMACInfo
#define soap_write_ns__getMACInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns__getMACInfo(soap, data),0) || soap_put_ns__getMACInfo(soap, data, "ns:getMACInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__getMACInfo * SOAP_FMAC4 soap_get_ns__getMACInfo(struct soap*, struct ns__getMACInfo *, const char*, const char*);

#ifndef soap_read_ns__getMACInfo
#define soap_read_ns__getMACInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__getMACInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns__getMACInfo * SOAP_FMAC2 soap_instantiate_ns__getMACInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__getMACInfo * soap_new_ns__getMACInfo(struct soap *soap, int n = -1) { return soap_instantiate_ns__getMACInfo(soap, n, NULL, NULL, NULL); }

inline struct ns__getMACInfo * soap_new_req_ns__getMACInfo(struct soap *soap) { struct ns__getMACInfo *_p = soap_instantiate_ns__getMACInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__getMACInfo(soap, _p); } return _p; }

inline struct ns__getMACInfo * soap_new_set_ns__getMACInfo(struct soap *soap, struct ns__GetHostDetailsReq *pInData) { struct ns__getMACInfo *_p = soap_instantiate_ns__getMACInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__getMACInfo(soap, _p); _p->pInData = pInData; } return _p; }

inline void soap_delete_ns__getMACInfo(struct soap *soap, struct ns__getMACInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__getMACInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__DeviceCtrlRsp
#define SOAP_TYPE_ns__DeviceCtrlRsp (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__DeviceCtrlRsp(struct soap*, struct ns__DeviceCtrlRsp *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__DeviceCtrlRsp(struct soap*, const struct ns__DeviceCtrlRsp *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__DeviceCtrlRsp(struct soap*, const char*, int, const struct ns__DeviceCtrlRsp *, const char*);
SOAP_FMAC3 struct ns__DeviceCtrlRsp * SOAP_FMAC4 soap_in_ns__DeviceCtrlRsp(struct soap*, const char*, struct ns__DeviceCtrlRsp *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__DeviceCtrlRsp(struct soap*, const struct ns__DeviceCtrlRsp *, const char*, const char*);

#ifndef soap_write_ns__DeviceCtrlRsp
#define soap_write_ns__DeviceCtrlRsp(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns__DeviceCtrlRsp(soap, data),0) || soap_put_ns__DeviceCtrlRsp(soap, data, "ns:DeviceCtrlRsp", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__DeviceCtrlRsp * SOAP_FMAC4 soap_get_ns__DeviceCtrlRsp(struct soap*, struct ns__DeviceCtrlRsp *, const char*, const char*);

#ifndef soap_read_ns__DeviceCtrlRsp
#define soap_read_ns__DeviceCtrlRsp(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__DeviceCtrlRsp(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns__DeviceCtrlRsp * SOAP_FMAC2 soap_instantiate_ns__DeviceCtrlRsp(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__DeviceCtrlRsp * soap_new_ns__DeviceCtrlRsp(struct soap *soap, int n = -1) { return soap_instantiate_ns__DeviceCtrlRsp(soap, n, NULL, NULL, NULL); }

inline struct ns__DeviceCtrlRsp * soap_new_req_ns__DeviceCtrlRsp(struct soap *soap, enum ns__ErrMessage retCode, unsigned char DoneCode) { struct ns__DeviceCtrlRsp *_p = soap_instantiate_ns__DeviceCtrlRsp(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__DeviceCtrlRsp(soap, _p); _p->retCode = retCode; _p->DoneCode = DoneCode; } return _p; }

inline struct ns__DeviceCtrlRsp * soap_new_set_ns__DeviceCtrlRsp(struct soap *soap, enum ns__ErrMessage retCode, unsigned char DoneCode) { struct ns__DeviceCtrlRsp *_p = soap_instantiate_ns__DeviceCtrlRsp(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__DeviceCtrlRsp(soap, _p); _p->retCode = retCode; _p->DoneCode = DoneCode; } return _p; }

inline void soap_delete_ns__DeviceCtrlRsp(struct soap *soap, struct ns__DeviceCtrlRsp *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__DeviceCtrlRsp(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__DeviceCtrlReq
#define SOAP_TYPE_ns__DeviceCtrlReq (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__DeviceCtrlReq(struct soap*, struct ns__DeviceCtrlReq *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__DeviceCtrlReq(struct soap*, const struct ns__DeviceCtrlReq *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__DeviceCtrlReq(struct soap*, const char*, int, const struct ns__DeviceCtrlReq *, const char*);
SOAP_FMAC3 struct ns__DeviceCtrlReq * SOAP_FMAC4 soap_in_ns__DeviceCtrlReq(struct soap*, const char*, struct ns__DeviceCtrlReq *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__DeviceCtrlReq(struct soap*, const struct ns__DeviceCtrlReq *, const char*, const char*);

#ifndef soap_write_ns__DeviceCtrlReq
#define soap_write_ns__DeviceCtrlReq(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns__DeviceCtrlReq(soap, data),0) || soap_put_ns__DeviceCtrlReq(soap, data, "ns:DeviceCtrlReq", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__DeviceCtrlReq * SOAP_FMAC4 soap_get_ns__DeviceCtrlReq(struct soap*, struct ns__DeviceCtrlReq *, const char*, const char*);

#ifndef soap_read_ns__DeviceCtrlReq
#define soap_read_ns__DeviceCtrlReq(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__DeviceCtrlReq(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns__DeviceCtrlReq * SOAP_FMAC2 soap_instantiate_ns__DeviceCtrlReq(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__DeviceCtrlReq * soap_new_ns__DeviceCtrlReq(struct soap *soap, int n = -1) { return soap_instantiate_ns__DeviceCtrlReq(soap, n, NULL, NULL, NULL); }

inline struct ns__DeviceCtrlReq * soap_new_req_ns__DeviceCtrlReq(struct soap *soap, unsigned int macID, unsigned char DeviceID[24], struct ns__DeviceDAL& DAL) { struct ns__DeviceCtrlReq *_p = soap_instantiate_ns__DeviceCtrlReq(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__DeviceCtrlReq(soap, _p); _p->macID = macID; memcpy(_p->DeviceID, DeviceID, sizeof(unsigned char[24])); _p->DAL = DAL; } return _p; }

inline struct ns__DeviceCtrlReq * soap_new_set_ns__DeviceCtrlReq(struct soap *soap, unsigned int macID, unsigned char DeviceID[24], struct ns__DeviceDAL& DAL) { struct ns__DeviceCtrlReq *_p = soap_instantiate_ns__DeviceCtrlReq(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__DeviceCtrlReq(soap, _p); _p->macID = macID; memcpy(_p->DeviceID, DeviceID, sizeof(unsigned char[24])); _p->DAL = DAL; } return _p; }

inline void soap_delete_ns__DeviceCtrlReq(struct soap *soap, struct ns__DeviceCtrlReq *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__DeviceCtrlReq(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__setDeviceParamRsp
#define SOAP_TYPE_ns__setDeviceParamRsp (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__setDeviceParamRsp(struct soap*, struct ns__setDeviceParamRsp *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__setDeviceParamRsp(struct soap*, const struct ns__setDeviceParamRsp *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__setDeviceParamRsp(struct soap*, const char*, int, const struct ns__setDeviceParamRsp *, const char*);
SOAP_FMAC3 struct ns__setDeviceParamRsp * SOAP_FMAC4 soap_in_ns__setDeviceParamRsp(struct soap*, const char*, struct ns__setDeviceParamRsp *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__setDeviceParamRsp(struct soap*, const struct ns__setDeviceParamRsp *, const char*, const char*);

#ifndef soap_write_ns__setDeviceParamRsp
#define soap_write_ns__setDeviceParamRsp(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns__setDeviceParamRsp(soap, data),0) || soap_put_ns__setDeviceParamRsp(soap, data, "ns:setDeviceParamRsp", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__setDeviceParamRsp * SOAP_FMAC4 soap_get_ns__setDeviceParamRsp(struct soap*, struct ns__setDeviceParamRsp *, const char*, const char*);

#ifndef soap_read_ns__setDeviceParamRsp
#define soap_read_ns__setDeviceParamRsp(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__setDeviceParamRsp(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns__setDeviceParamRsp * SOAP_FMAC2 soap_instantiate_ns__setDeviceParamRsp(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__setDeviceParamRsp * soap_new_ns__setDeviceParamRsp(struct soap *soap, int n = -1) { return soap_instantiate_ns__setDeviceParamRsp(soap, n, NULL, NULL, NULL); }

inline struct ns__setDeviceParamRsp * soap_new_req_ns__setDeviceParamRsp(struct soap *soap, enum ns__ErrMessage retCode, unsigned char DoneCode) { struct ns__setDeviceParamRsp *_p = soap_instantiate_ns__setDeviceParamRsp(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__setDeviceParamRsp(soap, _p); _p->retCode = retCode; _p->DoneCode = DoneCode; } return _p; }

inline struct ns__setDeviceParamRsp * soap_new_set_ns__setDeviceParamRsp(struct soap *soap, enum ns__ErrMessage retCode, unsigned char DoneCode) { struct ns__setDeviceParamRsp *_p = soap_instantiate_ns__setDeviceParamRsp(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__setDeviceParamRsp(soap, _p); _p->retCode = retCode; _p->DoneCode = DoneCode; } return _p; }

inline void soap_delete_ns__setDeviceParamRsp(struct soap *soap, struct ns__setDeviceParamRsp *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__setDeviceParamRsp(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__setDeviceParamReq
#define SOAP_TYPE_ns__setDeviceParamReq (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__setDeviceParamReq(struct soap*, struct ns__setDeviceParamReq *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__setDeviceParamReq(struct soap*, const struct ns__setDeviceParamReq *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__setDeviceParamReq(struct soap*, const char*, int, const struct ns__setDeviceParamReq *, const char*);
SOAP_FMAC3 struct ns__setDeviceParamReq * SOAP_FMAC4 soap_in_ns__setDeviceParamReq(struct soap*, const char*, struct ns__setDeviceParamReq *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__setDeviceParamReq(struct soap*, const struct ns__setDeviceParamReq *, const char*, const char*);

#ifndef soap_write_ns__setDeviceParamReq
#define soap_write_ns__setDeviceParamReq(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns__setDeviceParamReq(soap, data),0) || soap_put_ns__setDeviceParamReq(soap, data, "ns:setDeviceParamReq", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__setDeviceParamReq * SOAP_FMAC4 soap_get_ns__setDeviceParamReq(struct soap*, struct ns__setDeviceParamReq *, const char*, const char*);

#ifndef soap_read_ns__setDeviceParamReq
#define soap_read_ns__setDeviceParamReq(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__setDeviceParamReq(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns__setDeviceParamReq * SOAP_FMAC2 soap_instantiate_ns__setDeviceParamReq(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__setDeviceParamReq * soap_new_ns__setDeviceParamReq(struct soap *soap, int n = -1) { return soap_instantiate_ns__setDeviceParamReq(soap, n, NULL, NULL, NULL); }

inline struct ns__setDeviceParamReq * soap_new_req_ns__setDeviceParamReq(struct soap *soap, unsigned int macID, unsigned char DeviceID[24], unsigned char Opt_DeviceName, unsigned char Opt_DeviceInfo, char DeviceName[32], char DeviceInfo[64]) { struct ns__setDeviceParamReq *_p = soap_instantiate_ns__setDeviceParamReq(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__setDeviceParamReq(soap, _p); _p->macID = macID; memcpy(_p->DeviceID, DeviceID, sizeof(unsigned char[24])); _p->Opt_DeviceName = Opt_DeviceName; _p->Opt_DeviceInfo = Opt_DeviceInfo; memcpy(_p->DeviceName, DeviceName, sizeof(char[32])); memcpy(_p->DeviceInfo, DeviceInfo, sizeof(char[64])); } return _p; }

inline struct ns__setDeviceParamReq * soap_new_set_ns__setDeviceParamReq(struct soap *soap, unsigned int macID, unsigned char DeviceID[24], unsigned char Opt_DeviceName, unsigned char Opt_DeviceInfo, char DeviceName[32], char DeviceInfo[64]) { struct ns__setDeviceParamReq *_p = soap_instantiate_ns__setDeviceParamReq(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__setDeviceParamReq(soap, _p); _p->macID = macID; memcpy(_p->DeviceID, DeviceID, sizeof(unsigned char[24])); _p->Opt_DeviceName = Opt_DeviceName; _p->Opt_DeviceInfo = Opt_DeviceInfo; memcpy(_p->DeviceName, DeviceName, sizeof(char[32])); memcpy(_p->DeviceInfo, DeviceInfo, sizeof(char[64])); } return _p; }

inline void soap_delete_ns__setDeviceParamReq(struct soap *soap, struct ns__setDeviceParamReq *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__setDeviceParamReq(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__GetDeviceParamRsp
#define SOAP_TYPE_ns__GetDeviceParamRsp (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__GetDeviceParamRsp(struct soap*, struct ns__GetDeviceParamRsp *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__GetDeviceParamRsp(struct soap*, const struct ns__GetDeviceParamRsp *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__GetDeviceParamRsp(struct soap*, const char*, int, const struct ns__GetDeviceParamRsp *, const char*);
SOAP_FMAC3 struct ns__GetDeviceParamRsp * SOAP_FMAC4 soap_in_ns__GetDeviceParamRsp(struct soap*, const char*, struct ns__GetDeviceParamRsp *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__GetDeviceParamRsp(struct soap*, const struct ns__GetDeviceParamRsp *, const char*, const char*);

#ifndef soap_write_ns__GetDeviceParamRsp
#define soap_write_ns__GetDeviceParamRsp(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns__GetDeviceParamRsp(soap, data),0) || soap_put_ns__GetDeviceParamRsp(soap, data, "ns:GetDeviceParamRsp", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__GetDeviceParamRsp * SOAP_FMAC4 soap_get_ns__GetDeviceParamRsp(struct soap*, struct ns__GetDeviceParamRsp *, const char*, const char*);

#ifndef soap_read_ns__GetDeviceParamRsp
#define soap_read_ns__GetDeviceParamRsp(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__GetDeviceParamRsp(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns__GetDeviceParamRsp * SOAP_FMAC2 soap_instantiate_ns__GetDeviceParamRsp(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__GetDeviceParamRsp * soap_new_ns__GetDeviceParamRsp(struct soap *soap, int n = -1) { return soap_instantiate_ns__GetDeviceParamRsp(soap, n, NULL, NULL, NULL); }

inline struct ns__GetDeviceParamRsp * soap_new_req_ns__GetDeviceParamRsp(struct soap *soap, enum ns__ErrMessage retCode, unsigned char DoneCode, unsigned char DeviceID[24], unsigned char Opt_DeviceName, unsigned char Opt_DeviceInfo, unsigned char Opt_DALStatus, char DeviceName[32], char DeviceInfo[64], struct ns__DeviceDAL& DAL) { struct ns__GetDeviceParamRsp *_p = soap_instantiate_ns__GetDeviceParamRsp(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__GetDeviceParamRsp(soap, _p); _p->retCode = retCode; _p->DoneCode = DoneCode; memcpy(_p->DeviceID, DeviceID, sizeof(unsigned char[24])); _p->Opt_DeviceName = Opt_DeviceName; _p->Opt_DeviceInfo = Opt_DeviceInfo; _p->Opt_DALStatus = Opt_DALStatus; memcpy(_p->DeviceName, DeviceName, sizeof(char[32])); memcpy(_p->DeviceInfo, DeviceInfo, sizeof(char[64])); _p->DAL = DAL; } return _p; }

inline struct ns__GetDeviceParamRsp * soap_new_set_ns__GetDeviceParamRsp(struct soap *soap, enum ns__ErrMessage retCode, unsigned char DoneCode, unsigned char DeviceID[24], unsigned char Opt_DeviceName, unsigned char Opt_DeviceInfo, unsigned char Opt_DALStatus, char DeviceName[32], char DeviceInfo[64], struct ns__DeviceDAL& DAL) { struct ns__GetDeviceParamRsp *_p = soap_instantiate_ns__GetDeviceParamRsp(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__GetDeviceParamRsp(soap, _p); _p->retCode = retCode; _p->DoneCode = DoneCode; memcpy(_p->DeviceID, DeviceID, sizeof(unsigned char[24])); _p->Opt_DeviceName = Opt_DeviceName; _p->Opt_DeviceInfo = Opt_DeviceInfo; _p->Opt_DALStatus = Opt_DALStatus; memcpy(_p->DeviceName, DeviceName, sizeof(char[32])); memcpy(_p->DeviceInfo, DeviceInfo, sizeof(char[64])); _p->DAL = DAL; } return _p; }

inline void soap_delete_ns__GetDeviceParamRsp(struct soap *soap, struct ns__GetDeviceParamRsp *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__GetDeviceParamRsp(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__DeviceDAL
#define SOAP_TYPE_ns__DeviceDAL (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__DeviceDAL(struct soap*, struct ns__DeviceDAL *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__DeviceDAL(struct soap*, const struct ns__DeviceDAL *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__DeviceDAL(struct soap*, const char*, int, const struct ns__DeviceDAL *, const char*);
SOAP_FMAC3 struct ns__DeviceDAL * SOAP_FMAC4 soap_in_ns__DeviceDAL(struct soap*, const char*, struct ns__DeviceDAL *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__DeviceDAL(struct soap*, const struct ns__DeviceDAL *, const char*, const char*);

#ifndef soap_write_ns__DeviceDAL
#define soap_write_ns__DeviceDAL(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns__DeviceDAL(soap, data),0) || soap_put_ns__DeviceDAL(soap, data, "ns:DeviceDAL", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__DeviceDAL * SOAP_FMAC4 soap_get_ns__DeviceDAL(struct soap*, struct ns__DeviceDAL *, const char*, const char*);

#ifndef soap_read_ns__DeviceDAL
#define soap_read_ns__DeviceDAL(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__DeviceDAL(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns__DeviceDAL * SOAP_FMAC2 soap_instantiate_ns__DeviceDAL(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__DeviceDAL * soap_new_ns__DeviceDAL(struct soap *soap, int n = -1) { return soap_instantiate_ns__DeviceDAL(soap, n, NULL, NULL, NULL); }

inline struct ns__DeviceDAL * soap_new_req_ns__DeviceDAL(struct soap *soap, int __size, unsigned char **__ptr) { struct ns__DeviceDAL *_p = soap_instantiate_ns__DeviceDAL(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__DeviceDAL(soap, _p); _p->__size = __size; _p->__ptr = __ptr; } return _p; }

inline struct ns__DeviceDAL * soap_new_set_ns__DeviceDAL(struct soap *soap, int __size, unsigned char **__ptr) { struct ns__DeviceDAL *_p = soap_instantiate_ns__DeviceDAL(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__DeviceDAL(soap, _p); _p->__size = __size; _p->__ptr = __ptr; } return _p; }

inline void soap_delete_ns__DeviceDAL(struct soap *soap, struct ns__DeviceDAL *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__DeviceDAL(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__GetDeviceParamReq
#define SOAP_TYPE_ns__GetDeviceParamReq (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__GetDeviceParamReq(struct soap*, struct ns__GetDeviceParamReq *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__GetDeviceParamReq(struct soap*, const struct ns__GetDeviceParamReq *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__GetDeviceParamReq(struct soap*, const char*, int, const struct ns__GetDeviceParamReq *, const char*);
SOAP_FMAC3 struct ns__GetDeviceParamReq * SOAP_FMAC4 soap_in_ns__GetDeviceParamReq(struct soap*, const char*, struct ns__GetDeviceParamReq *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__GetDeviceParamReq(struct soap*, const struct ns__GetDeviceParamReq *, const char*, const char*);

#ifndef soap_write_ns__GetDeviceParamReq
#define soap_write_ns__GetDeviceParamReq(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns__GetDeviceParamReq(soap, data),0) || soap_put_ns__GetDeviceParamReq(soap, data, "ns:GetDeviceParamReq", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__GetDeviceParamReq * SOAP_FMAC4 soap_get_ns__GetDeviceParamReq(struct soap*, struct ns__GetDeviceParamReq *, const char*, const char*);

#ifndef soap_read_ns__GetDeviceParamReq
#define soap_read_ns__GetDeviceParamReq(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__GetDeviceParamReq(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns__GetDeviceParamReq * SOAP_FMAC2 soap_instantiate_ns__GetDeviceParamReq(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__GetDeviceParamReq * soap_new_ns__GetDeviceParamReq(struct soap *soap, int n = -1) { return soap_instantiate_ns__GetDeviceParamReq(soap, n, NULL, NULL, NULL); }

inline struct ns__GetDeviceParamReq * soap_new_req_ns__GetDeviceParamReq(struct soap *soap, unsigned int macID, unsigned char DeviceID[24], unsigned char Opt_DeviceName, unsigned char Opt_DeviceInfo, unsigned char Opt_DALStatus) { struct ns__GetDeviceParamReq *_p = soap_instantiate_ns__GetDeviceParamReq(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__GetDeviceParamReq(soap, _p); _p->macID = macID; memcpy(_p->DeviceID, DeviceID, sizeof(unsigned char[24])); _p->Opt_DeviceName = Opt_DeviceName; _p->Opt_DeviceInfo = Opt_DeviceInfo; _p->Opt_DALStatus = Opt_DALStatus; } return _p; }

inline struct ns__GetDeviceParamReq * soap_new_set_ns__GetDeviceParamReq(struct soap *soap, unsigned int macID, unsigned char DeviceID[24], unsigned char Opt_DeviceName, unsigned char Opt_DeviceInfo, unsigned char Opt_DALStatus) { struct ns__GetDeviceParamReq *_p = soap_instantiate_ns__GetDeviceParamReq(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__GetDeviceParamReq(soap, _p); _p->macID = macID; memcpy(_p->DeviceID, DeviceID, sizeof(unsigned char[24])); _p->Opt_DeviceName = Opt_DeviceName; _p->Opt_DeviceInfo = Opt_DeviceInfo; _p->Opt_DALStatus = Opt_DALStatus; } return _p; }

inline void soap_delete_ns__GetDeviceParamReq(struct soap *soap, struct ns__GetDeviceParamReq *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__GetDeviceParamReq(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__GetDeviceListRsp
#define SOAP_TYPE_ns__GetDeviceListRsp (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__GetDeviceListRsp(struct soap*, struct ns__GetDeviceListRsp *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__GetDeviceListRsp(struct soap*, const struct ns__GetDeviceListRsp *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__GetDeviceListRsp(struct soap*, const char*, int, const struct ns__GetDeviceListRsp *, const char*);
SOAP_FMAC3 struct ns__GetDeviceListRsp * SOAP_FMAC4 soap_in_ns__GetDeviceListRsp(struct soap*, const char*, struct ns__GetDeviceListRsp *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__GetDeviceListRsp(struct soap*, const struct ns__GetDeviceListRsp *, const char*, const char*);

#ifndef soap_write_ns__GetDeviceListRsp
#define soap_write_ns__GetDeviceListRsp(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns__GetDeviceListRsp(soap, data),0) || soap_put_ns__GetDeviceListRsp(soap, data, "ns:GetDeviceListRsp", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__GetDeviceListRsp * SOAP_FMAC4 soap_get_ns__GetDeviceListRsp(struct soap*, struct ns__GetDeviceListRsp *, const char*, const char*);

#ifndef soap_read_ns__GetDeviceListRsp
#define soap_read_ns__GetDeviceListRsp(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__GetDeviceListRsp(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns__GetDeviceListRsp * SOAP_FMAC2 soap_instantiate_ns__GetDeviceListRsp(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__GetDeviceListRsp * soap_new_ns__GetDeviceListRsp(struct soap *soap, int n = -1) { return soap_instantiate_ns__GetDeviceListRsp(soap, n, NULL, NULL, NULL); }

inline struct ns__GetDeviceListRsp * soap_new_req_ns__GetDeviceListRsp(struct soap *soap, enum ns__ErrMessage retCode, unsigned char DoneCode, unsigned short nDevCount, struct ns__DeviceNodeArray& array) { struct ns__GetDeviceListRsp *_p = soap_instantiate_ns__GetDeviceListRsp(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__GetDeviceListRsp(soap, _p); _p->retCode = retCode; _p->DoneCode = DoneCode; _p->nDevCount = nDevCount; _p->array = array; } return _p; }

inline struct ns__GetDeviceListRsp * soap_new_set_ns__GetDeviceListRsp(struct soap *soap, enum ns__ErrMessage retCode, unsigned char DoneCode, unsigned short nDevCount, struct ns__DeviceNodeArray& array) { struct ns__GetDeviceListRsp *_p = soap_instantiate_ns__GetDeviceListRsp(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__GetDeviceListRsp(soap, _p); _p->retCode = retCode; _p->DoneCode = DoneCode; _p->nDevCount = nDevCount; _p->array = array; } return _p; }

inline void soap_delete_ns__GetDeviceListRsp(struct soap *soap, struct ns__GetDeviceListRsp *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__GetDeviceListRsp(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__DeviceNodeArray
#define SOAP_TYPE_ns__DeviceNodeArray (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__DeviceNodeArray(struct soap*, struct ns__DeviceNodeArray *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__DeviceNodeArray(struct soap*, const struct ns__DeviceNodeArray *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__DeviceNodeArray(struct soap*, const char*, int, const struct ns__DeviceNodeArray *, const char*);
SOAP_FMAC3 struct ns__DeviceNodeArray * SOAP_FMAC4 soap_in_ns__DeviceNodeArray(struct soap*, const char*, struct ns__DeviceNodeArray *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__DeviceNodeArray(struct soap*, const struct ns__DeviceNodeArray *, const char*, const char*);

#ifndef soap_write_ns__DeviceNodeArray
#define soap_write_ns__DeviceNodeArray(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns__DeviceNodeArray(soap, data),0) || soap_put_ns__DeviceNodeArray(soap, data, "ns:DeviceNodeArray", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__DeviceNodeArray * SOAP_FMAC4 soap_get_ns__DeviceNodeArray(struct soap*, struct ns__DeviceNodeArray *, const char*, const char*);

#ifndef soap_read_ns__DeviceNodeArray
#define soap_read_ns__DeviceNodeArray(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__DeviceNodeArray(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns__DeviceNodeArray * SOAP_FMAC2 soap_instantiate_ns__DeviceNodeArray(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__DeviceNodeArray * soap_new_ns__DeviceNodeArray(struct soap *soap, int n = -1) { return soap_instantiate_ns__DeviceNodeArray(soap, n, NULL, NULL, NULL); }

inline struct ns__DeviceNodeArray * soap_new_req_ns__DeviceNodeArray(struct soap *soap, int __size, struct ns__stCall_DeviceNode **__ptr) { struct ns__DeviceNodeArray *_p = soap_instantiate_ns__DeviceNodeArray(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__DeviceNodeArray(soap, _p); _p->__size = __size; _p->__ptr = __ptr; } return _p; }

inline struct ns__DeviceNodeArray * soap_new_set_ns__DeviceNodeArray(struct soap *soap, int __size, struct ns__stCall_DeviceNode **__ptr) { struct ns__DeviceNodeArray *_p = soap_instantiate_ns__DeviceNodeArray(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__DeviceNodeArray(soap, _p); _p->__size = __size; _p->__ptr = __ptr; } return _p; }

inline void soap_delete_ns__DeviceNodeArray(struct soap *soap, struct ns__DeviceNodeArray *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__DeviceNodeArray(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__stCall_DeviceNode
#define SOAP_TYPE_ns__stCall_DeviceNode (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__stCall_DeviceNode(struct soap*, struct ns__stCall_DeviceNode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__stCall_DeviceNode(struct soap*, const struct ns__stCall_DeviceNode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__stCall_DeviceNode(struct soap*, const char*, int, const struct ns__stCall_DeviceNode *, const char*);
SOAP_FMAC3 struct ns__stCall_DeviceNode * SOAP_FMAC4 soap_in_ns__stCall_DeviceNode(struct soap*, const char*, struct ns__stCall_DeviceNode *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__stCall_DeviceNode(struct soap*, const struct ns__stCall_DeviceNode *, const char*, const char*);

#ifndef soap_write_ns__stCall_DeviceNode
#define soap_write_ns__stCall_DeviceNode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns__stCall_DeviceNode(soap, data),0) || soap_put_ns__stCall_DeviceNode(soap, data, "ns:stCall-DeviceNode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__stCall_DeviceNode * SOAP_FMAC4 soap_get_ns__stCall_DeviceNode(struct soap*, struct ns__stCall_DeviceNode *, const char*, const char*);

#ifndef soap_read_ns__stCall_DeviceNode
#define soap_read_ns__stCall_DeviceNode(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__stCall_DeviceNode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns__stCall_DeviceNode * SOAP_FMAC2 soap_instantiate_ns__stCall_DeviceNode(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__stCall_DeviceNode * soap_new_ns__stCall_DeviceNode(struct soap *soap, int n = -1) { return soap_instantiate_ns__stCall_DeviceNode(soap, n, NULL, NULL, NULL); }

inline struct ns__stCall_DeviceNode * soap_new_req_ns__stCall_DeviceNode(struct soap *soap, char DeviceName[32], char No[64], unsigned char DeviceID[24]) { struct ns__stCall_DeviceNode *_p = soap_instantiate_ns__stCall_DeviceNode(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__stCall_DeviceNode(soap, _p); memcpy(_p->DeviceName, DeviceName, sizeof(char[32])); memcpy(_p->No, No, sizeof(char[64])); memcpy(_p->DeviceID, DeviceID, sizeof(unsigned char[24])); } return _p; }

inline struct ns__stCall_DeviceNode * soap_new_set_ns__stCall_DeviceNode(struct soap *soap, char DeviceName[32], char No[64], unsigned char DeviceID[24]) { struct ns__stCall_DeviceNode *_p = soap_instantiate_ns__stCall_DeviceNode(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__stCall_DeviceNode(soap, _p); memcpy(_p->DeviceName, DeviceName, sizeof(char[32])); memcpy(_p->No, No, sizeof(char[64])); memcpy(_p->DeviceID, DeviceID, sizeof(unsigned char[24])); } return _p; }

inline void soap_delete_ns__stCall_DeviceNode(struct soap *soap, struct ns__stCall_DeviceNode *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__stCall_DeviceNode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__GetDeviceListReq
#define SOAP_TYPE_ns__GetDeviceListReq (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__GetDeviceListReq(struct soap*, struct ns__GetDeviceListReq *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__GetDeviceListReq(struct soap*, const struct ns__GetDeviceListReq *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__GetDeviceListReq(struct soap*, const char*, int, const struct ns__GetDeviceListReq *, const char*);
SOAP_FMAC3 struct ns__GetDeviceListReq * SOAP_FMAC4 soap_in_ns__GetDeviceListReq(struct soap*, const char*, struct ns__GetDeviceListReq *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__GetDeviceListReq(struct soap*, const struct ns__GetDeviceListReq *, const char*, const char*);

#ifndef soap_write_ns__GetDeviceListReq
#define soap_write_ns__GetDeviceListReq(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns__GetDeviceListReq(soap, data),0) || soap_put_ns__GetDeviceListReq(soap, data, "ns:GetDeviceListReq", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__GetDeviceListReq * SOAP_FMAC4 soap_get_ns__GetDeviceListReq(struct soap*, struct ns__GetDeviceListReq *, const char*, const char*);

#ifndef soap_read_ns__GetDeviceListReq
#define soap_read_ns__GetDeviceListReq(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__GetDeviceListReq(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns__GetDeviceListReq * SOAP_FMAC2 soap_instantiate_ns__GetDeviceListReq(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__GetDeviceListReq * soap_new_ns__GetDeviceListReq(struct soap *soap, int n = -1) { return soap_instantiate_ns__GetDeviceListReq(soap, n, NULL, NULL, NULL); }

inline struct ns__GetDeviceListReq * soap_new_req_ns__GetDeviceListReq(struct soap *soap, unsigned int macID) { struct ns__GetDeviceListReq *_p = soap_instantiate_ns__GetDeviceListReq(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__GetDeviceListReq(soap, _p); _p->macID = macID; } return _p; }

inline struct ns__GetDeviceListReq * soap_new_set_ns__GetDeviceListReq(struct soap *soap, unsigned int macID) { struct ns__GetDeviceListReq *_p = soap_instantiate_ns__GetDeviceListReq(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__GetDeviceListReq(soap, _p); _p->macID = macID; } return _p; }

inline void soap_delete_ns__GetDeviceListReq(struct soap *soap, struct ns__GetDeviceListReq *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__GetDeviceListReq(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__RemoveDeviceRsp
#define SOAP_TYPE_ns__RemoveDeviceRsp (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__RemoveDeviceRsp(struct soap*, struct ns__RemoveDeviceRsp *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__RemoveDeviceRsp(struct soap*, const struct ns__RemoveDeviceRsp *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__RemoveDeviceRsp(struct soap*, const char*, int, const struct ns__RemoveDeviceRsp *, const char*);
SOAP_FMAC3 struct ns__RemoveDeviceRsp * SOAP_FMAC4 soap_in_ns__RemoveDeviceRsp(struct soap*, const char*, struct ns__RemoveDeviceRsp *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__RemoveDeviceRsp(struct soap*, const struct ns__RemoveDeviceRsp *, const char*, const char*);

#ifndef soap_write_ns__RemoveDeviceRsp
#define soap_write_ns__RemoveDeviceRsp(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns__RemoveDeviceRsp(soap, data),0) || soap_put_ns__RemoveDeviceRsp(soap, data, "ns:RemoveDeviceRsp", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__RemoveDeviceRsp * SOAP_FMAC4 soap_get_ns__RemoveDeviceRsp(struct soap*, struct ns__RemoveDeviceRsp *, const char*, const char*);

#ifndef soap_read_ns__RemoveDeviceRsp
#define soap_read_ns__RemoveDeviceRsp(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__RemoveDeviceRsp(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns__RemoveDeviceRsp * SOAP_FMAC2 soap_instantiate_ns__RemoveDeviceRsp(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__RemoveDeviceRsp * soap_new_ns__RemoveDeviceRsp(struct soap *soap, int n = -1) { return soap_instantiate_ns__RemoveDeviceRsp(soap, n, NULL, NULL, NULL); }

inline struct ns__RemoveDeviceRsp * soap_new_req_ns__RemoveDeviceRsp(struct soap *soap, enum ns__ErrMessage retCode, unsigned char DoneCode) { struct ns__RemoveDeviceRsp *_p = soap_instantiate_ns__RemoveDeviceRsp(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__RemoveDeviceRsp(soap, _p); _p->retCode = retCode; _p->DoneCode = DoneCode; } return _p; }

inline struct ns__RemoveDeviceRsp * soap_new_set_ns__RemoveDeviceRsp(struct soap *soap, enum ns__ErrMessage retCode, unsigned char DoneCode) { struct ns__RemoveDeviceRsp *_p = soap_instantiate_ns__RemoveDeviceRsp(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__RemoveDeviceRsp(soap, _p); _p->retCode = retCode; _p->DoneCode = DoneCode; } return _p; }

inline void soap_delete_ns__RemoveDeviceRsp(struct soap *soap, struct ns__RemoveDeviceRsp *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__RemoveDeviceRsp(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__RemoveDeviceReq
#define SOAP_TYPE_ns__RemoveDeviceReq (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__RemoveDeviceReq(struct soap*, struct ns__RemoveDeviceReq *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__RemoveDeviceReq(struct soap*, const struct ns__RemoveDeviceReq *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__RemoveDeviceReq(struct soap*, const char*, int, const struct ns__RemoveDeviceReq *, const char*);
SOAP_FMAC3 struct ns__RemoveDeviceReq * SOAP_FMAC4 soap_in_ns__RemoveDeviceReq(struct soap*, const char*, struct ns__RemoveDeviceReq *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__RemoveDeviceReq(struct soap*, const struct ns__RemoveDeviceReq *, const char*, const char*);

#ifndef soap_write_ns__RemoveDeviceReq
#define soap_write_ns__RemoveDeviceReq(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns__RemoveDeviceReq(soap, data),0) || soap_put_ns__RemoveDeviceReq(soap, data, "ns:RemoveDeviceReq", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__RemoveDeviceReq * SOAP_FMAC4 soap_get_ns__RemoveDeviceReq(struct soap*, struct ns__RemoveDeviceReq *, const char*, const char*);

#ifndef soap_read_ns__RemoveDeviceReq
#define soap_read_ns__RemoveDeviceReq(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__RemoveDeviceReq(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns__RemoveDeviceReq * SOAP_FMAC2 soap_instantiate_ns__RemoveDeviceReq(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__RemoveDeviceReq * soap_new_ns__RemoveDeviceReq(struct soap *soap, int n = -1) { return soap_instantiate_ns__RemoveDeviceReq(soap, n, NULL, NULL, NULL); }

inline struct ns__RemoveDeviceReq * soap_new_req_ns__RemoveDeviceReq(struct soap *soap, unsigned int macID, unsigned char DeviceID[24]) { struct ns__RemoveDeviceReq *_p = soap_instantiate_ns__RemoveDeviceReq(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__RemoveDeviceReq(soap, _p); _p->macID = macID; memcpy(_p->DeviceID, DeviceID, sizeof(unsigned char[24])); } return _p; }

inline struct ns__RemoveDeviceReq * soap_new_set_ns__RemoveDeviceReq(struct soap *soap, unsigned int macID, unsigned char DeviceID[24]) { struct ns__RemoveDeviceReq *_p = soap_instantiate_ns__RemoveDeviceReq(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__RemoveDeviceReq(soap, _p); _p->macID = macID; memcpy(_p->DeviceID, DeviceID, sizeof(unsigned char[24])); } return _p; }

inline void soap_delete_ns__RemoveDeviceReq(struct soap *soap, struct ns__RemoveDeviceReq *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__RemoveDeviceReq(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__SetHostDetailsRsp
#define SOAP_TYPE_ns__SetHostDetailsRsp (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__SetHostDetailsRsp(struct soap*, struct ns__SetHostDetailsRsp *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__SetHostDetailsRsp(struct soap*, const struct ns__SetHostDetailsRsp *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__SetHostDetailsRsp(struct soap*, const char*, int, const struct ns__SetHostDetailsRsp *, const char*);
SOAP_FMAC3 struct ns__SetHostDetailsRsp * SOAP_FMAC4 soap_in_ns__SetHostDetailsRsp(struct soap*, const char*, struct ns__SetHostDetailsRsp *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__SetHostDetailsRsp(struct soap*, const struct ns__SetHostDetailsRsp *, const char*, const char*);

#ifndef soap_write_ns__SetHostDetailsRsp
#define soap_write_ns__SetHostDetailsRsp(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns__SetHostDetailsRsp(soap, data),0) || soap_put_ns__SetHostDetailsRsp(soap, data, "ns:SetHostDetailsRsp", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__SetHostDetailsRsp * SOAP_FMAC4 soap_get_ns__SetHostDetailsRsp(struct soap*, struct ns__SetHostDetailsRsp *, const char*, const char*);

#ifndef soap_read_ns__SetHostDetailsRsp
#define soap_read_ns__SetHostDetailsRsp(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__SetHostDetailsRsp(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns__SetHostDetailsRsp * SOAP_FMAC2 soap_instantiate_ns__SetHostDetailsRsp(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__SetHostDetailsRsp * soap_new_ns__SetHostDetailsRsp(struct soap *soap, int n = -1) { return soap_instantiate_ns__SetHostDetailsRsp(soap, n, NULL, NULL, NULL); }

inline struct ns__SetHostDetailsRsp * soap_new_req_ns__SetHostDetailsRsp(struct soap *soap, enum ns__ErrMessage retCode, unsigned char DoneCode) { struct ns__SetHostDetailsRsp *_p = soap_instantiate_ns__SetHostDetailsRsp(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__SetHostDetailsRsp(soap, _p); _p->retCode = retCode; _p->DoneCode = DoneCode; } return _p; }

inline struct ns__SetHostDetailsRsp * soap_new_set_ns__SetHostDetailsRsp(struct soap *soap, enum ns__ErrMessage retCode, unsigned char DoneCode) { struct ns__SetHostDetailsRsp *_p = soap_instantiate_ns__SetHostDetailsRsp(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__SetHostDetailsRsp(soap, _p); _p->retCode = retCode; _p->DoneCode = DoneCode; } return _p; }

inline void soap_delete_ns__SetHostDetailsRsp(struct soap *soap, struct ns__SetHostDetailsRsp *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__SetHostDetailsRsp(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__SetHostDetailsReq
#define SOAP_TYPE_ns__SetHostDetailsReq (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__SetHostDetailsReq(struct soap*, struct ns__SetHostDetailsReq *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__SetHostDetailsReq(struct soap*, const struct ns__SetHostDetailsReq *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__SetHostDetailsReq(struct soap*, const char*, int, const struct ns__SetHostDetailsReq *, const char*);
SOAP_FMAC3 struct ns__SetHostDetailsReq * SOAP_FMAC4 soap_in_ns__SetHostDetailsReq(struct soap*, const char*, struct ns__SetHostDetailsReq *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__SetHostDetailsReq(struct soap*, const struct ns__SetHostDetailsReq *, const char*, const char*);

#ifndef soap_write_ns__SetHostDetailsReq
#define soap_write_ns__SetHostDetailsReq(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns__SetHostDetailsReq(soap, data),0) || soap_put_ns__SetHostDetailsReq(soap, data, "ns:SetHostDetailsReq", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__SetHostDetailsReq * SOAP_FMAC4 soap_get_ns__SetHostDetailsReq(struct soap*, struct ns__SetHostDetailsReq *, const char*, const char*);

#ifndef soap_read_ns__SetHostDetailsReq
#define soap_read_ns__SetHostDetailsReq(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__SetHostDetailsReq(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns__SetHostDetailsReq * SOAP_FMAC2 soap_instantiate_ns__SetHostDetailsReq(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__SetHostDetailsReq * soap_new_ns__SetHostDetailsReq(struct soap *soap, int n = -1) { return soap_instantiate_ns__SetHostDetailsReq(soap, n, NULL, NULL, NULL); }

inline struct ns__SetHostDetailsReq * soap_new_req_ns__SetHostDetailsReq(struct soap *soap, unsigned int macID, char HostName[64], char HostInfo[64]) { struct ns__SetHostDetailsReq *_p = soap_instantiate_ns__SetHostDetailsReq(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__SetHostDetailsReq(soap, _p); _p->macID = macID; memcpy(_p->HostName, HostName, sizeof(char[64])); memcpy(_p->HostInfo, HostInfo, sizeof(char[64])); } return _p; }

inline struct ns__SetHostDetailsReq * soap_new_set_ns__SetHostDetailsReq(struct soap *soap, unsigned int macID, char HostName[64], char HostInfo[64]) { struct ns__SetHostDetailsReq *_p = soap_instantiate_ns__SetHostDetailsReq(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__SetHostDetailsReq(soap, _p); _p->macID = macID; memcpy(_p->HostName, HostName, sizeof(char[64])); memcpy(_p->HostInfo, HostInfo, sizeof(char[64])); } return _p; }

inline void soap_delete_ns__SetHostDetailsReq(struct soap *soap, struct ns__SetHostDetailsReq *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__SetHostDetailsReq(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__GetHostDetailsRsp
#define SOAP_TYPE_ns__GetHostDetailsRsp (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__GetHostDetailsRsp(struct soap*, struct ns__GetHostDetailsRsp *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__GetHostDetailsRsp(struct soap*, const struct ns__GetHostDetailsRsp *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__GetHostDetailsRsp(struct soap*, const char*, int, const struct ns__GetHostDetailsRsp *, const char*);
SOAP_FMAC3 struct ns__GetHostDetailsRsp * SOAP_FMAC4 soap_in_ns__GetHostDetailsRsp(struct soap*, const char*, struct ns__GetHostDetailsRsp *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__GetHostDetailsRsp(struct soap*, const struct ns__GetHostDetailsRsp *, const char*, const char*);

#ifndef soap_write_ns__GetHostDetailsRsp
#define soap_write_ns__GetHostDetailsRsp(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns__GetHostDetailsRsp(soap, data),0) || soap_put_ns__GetHostDetailsRsp(soap, data, "ns:GetHostDetailsRsp", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__GetHostDetailsRsp * SOAP_FMAC4 soap_get_ns__GetHostDetailsRsp(struct soap*, struct ns__GetHostDetailsRsp *, const char*, const char*);

#ifndef soap_read_ns__GetHostDetailsRsp
#define soap_read_ns__GetHostDetailsRsp(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__GetHostDetailsRsp(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns__GetHostDetailsRsp * SOAP_FMAC2 soap_instantiate_ns__GetHostDetailsRsp(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__GetHostDetailsRsp * soap_new_ns__GetHostDetailsRsp(struct soap *soap, int n = -1) { return soap_instantiate_ns__GetHostDetailsRsp(soap, n, NULL, NULL, NULL); }

inline struct ns__GetHostDetailsRsp * soap_new_req_ns__GetHostDetailsRsp(struct soap *soap, enum ns__ErrMessage retCode, unsigned char DoneCode, unsigned short HostType, unsigned short FirmwareVersion, char HostName[64], char HostInfo[64], unsigned char ConnetType, unsigned char IEEEAdd[8], unsigned char IEEEAdd_Flag, unsigned char PANID[2], unsigned char PANID_Flag, unsigned char EPANID[8], unsigned char EPANID_Flag, unsigned short SensorNum, unsigned short RelayNum, unsigned short ANSensorNum, unsigned short ANRelayNum) { struct ns__GetHostDetailsRsp *_p = soap_instantiate_ns__GetHostDetailsRsp(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__GetHostDetailsRsp(soap, _p); _p->retCode = retCode; _p->DoneCode = DoneCode; _p->HostType = HostType; _p->FirmwareVersion = FirmwareVersion; memcpy(_p->HostName, HostName, sizeof(char[64])); memcpy(_p->HostInfo, HostInfo, sizeof(char[64])); _p->ConnetType = ConnetType; memcpy(_p->IEEEAdd, IEEEAdd, sizeof(unsigned char[8])); _p->IEEEAdd_Flag = IEEEAdd_Flag; memcpy(_p->PANID, PANID, sizeof(unsigned char[2])); _p->PANID_Flag = PANID_Flag; memcpy(_p->EPANID, EPANID, sizeof(unsigned char[8])); _p->EPANID_Flag = EPANID_Flag; _p->SensorNum = SensorNum; _p->RelayNum = RelayNum; _p->ANSensorNum = ANSensorNum; _p->ANRelayNum = ANRelayNum; } return _p; }

inline struct ns__GetHostDetailsRsp * soap_new_set_ns__GetHostDetailsRsp(struct soap *soap, enum ns__ErrMessage retCode, unsigned char DoneCode, unsigned short HostType, unsigned short FirmwareVersion, char HostName[64], char HostInfo[64], unsigned char ConnetType, unsigned char IEEEAdd[8], unsigned char IEEEAdd_Flag, unsigned char PANID[2], unsigned char PANID_Flag, unsigned char EPANID[8], unsigned char EPANID_Flag, unsigned short SensorNum, unsigned short RelayNum, unsigned short ANSensorNum, unsigned short ANRelayNum) { struct ns__GetHostDetailsRsp *_p = soap_instantiate_ns__GetHostDetailsRsp(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__GetHostDetailsRsp(soap, _p); _p->retCode = retCode; _p->DoneCode = DoneCode; _p->HostType = HostType; _p->FirmwareVersion = FirmwareVersion; memcpy(_p->HostName, HostName, sizeof(char[64])); memcpy(_p->HostInfo, HostInfo, sizeof(char[64])); _p->ConnetType = ConnetType; memcpy(_p->IEEEAdd, IEEEAdd, sizeof(unsigned char[8])); _p->IEEEAdd_Flag = IEEEAdd_Flag; memcpy(_p->PANID, PANID, sizeof(unsigned char[2])); _p->PANID_Flag = PANID_Flag; memcpy(_p->EPANID, EPANID, sizeof(unsigned char[8])); _p->EPANID_Flag = EPANID_Flag; _p->SensorNum = SensorNum; _p->RelayNum = RelayNum; _p->ANSensorNum = ANSensorNum; _p->ANRelayNum = ANRelayNum; } return _p; }

inline void soap_delete_ns__GetHostDetailsRsp(struct soap *soap, struct ns__GetHostDetailsRsp *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__GetHostDetailsRsp(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__GetHostDetailsReq
#define SOAP_TYPE_ns__GetHostDetailsReq (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__GetHostDetailsReq(struct soap*, struct ns__GetHostDetailsReq *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__GetHostDetailsReq(struct soap*, const struct ns__GetHostDetailsReq *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__GetHostDetailsReq(struct soap*, const char*, int, const struct ns__GetHostDetailsReq *, const char*);
SOAP_FMAC3 struct ns__GetHostDetailsReq * SOAP_FMAC4 soap_in_ns__GetHostDetailsReq(struct soap*, const char*, struct ns__GetHostDetailsReq *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__GetHostDetailsReq(struct soap*, const struct ns__GetHostDetailsReq *, const char*, const char*);

#ifndef soap_write_ns__GetHostDetailsReq
#define soap_write_ns__GetHostDetailsReq(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns__GetHostDetailsReq(soap, data),0) || soap_put_ns__GetHostDetailsReq(soap, data, "ns:GetHostDetailsReq", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__GetHostDetailsReq * SOAP_FMAC4 soap_get_ns__GetHostDetailsReq(struct soap*, struct ns__GetHostDetailsReq *, const char*, const char*);

#ifndef soap_read_ns__GetHostDetailsReq
#define soap_read_ns__GetHostDetailsReq(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__GetHostDetailsReq(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns__GetHostDetailsReq * SOAP_FMAC2 soap_instantiate_ns__GetHostDetailsReq(struct soap*, int, const char*, const char*, size_t*);

inline struct ns__GetHostDetailsReq * soap_new_ns__GetHostDetailsReq(struct soap *soap, int n = -1) { return soap_instantiate_ns__GetHostDetailsReq(soap, n, NULL, NULL, NULL); }

inline struct ns__GetHostDetailsReq * soap_new_req_ns__GetHostDetailsReq(struct soap *soap, unsigned int macID) { struct ns__GetHostDetailsReq *_p = soap_instantiate_ns__GetHostDetailsReq(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__GetHostDetailsReq(soap, _p); _p->macID = macID; } return _p; }

inline struct ns__GetHostDetailsReq * soap_new_set_ns__GetHostDetailsReq(struct soap *soap, unsigned int macID) { struct ns__GetHostDetailsReq *_p = soap_instantiate_ns__GetHostDetailsReq(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns__GetHostDetailsReq(soap, _p); _p->macID = macID; } return _p; }

inline void soap_delete_ns__GetHostDetailsReq(struct soap *soap, struct ns__GetHostDetailsReq *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__GetHostDetailsReq(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (75)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data),0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (74)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data),0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (68)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data),0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTons__DeviceCtrlRsp
#define SOAP_TYPE_PointerTons__DeviceCtrlRsp (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons__DeviceCtrlRsp(struct soap*, struct ns__DeviceCtrlRsp *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons__DeviceCtrlRsp(struct soap*, const char *, int, struct ns__DeviceCtrlRsp *const*, const char *);
SOAP_FMAC3 struct ns__DeviceCtrlRsp ** SOAP_FMAC4 soap_in_PointerTons__DeviceCtrlRsp(struct soap*, const char*, struct ns__DeviceCtrlRsp **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons__DeviceCtrlRsp(struct soap*, struct ns__DeviceCtrlRsp *const*, const char*, const char*);

#ifndef soap_write_PointerTons__DeviceCtrlRsp
#define soap_write_PointerTons__DeviceCtrlRsp(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons__DeviceCtrlRsp(soap, data),0) || soap_put_PointerTons__DeviceCtrlRsp(soap, data, "ns:DeviceCtrlRsp", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__DeviceCtrlRsp ** SOAP_FMAC4 soap_get_PointerTons__DeviceCtrlRsp(struct soap*, struct ns__DeviceCtrlRsp **, const char*, const char*);

#ifndef soap_read_PointerTons__DeviceCtrlRsp
#define soap_read_PointerTons__DeviceCtrlRsp(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons__DeviceCtrlRsp(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons__DeviceCtrlReq
#define SOAP_TYPE_PointerTons__DeviceCtrlReq (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons__DeviceCtrlReq(struct soap*, struct ns__DeviceCtrlReq *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons__DeviceCtrlReq(struct soap*, const char *, int, struct ns__DeviceCtrlReq *const*, const char *);
SOAP_FMAC3 struct ns__DeviceCtrlReq ** SOAP_FMAC4 soap_in_PointerTons__DeviceCtrlReq(struct soap*, const char*, struct ns__DeviceCtrlReq **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons__DeviceCtrlReq(struct soap*, struct ns__DeviceCtrlReq *const*, const char*, const char*);

#ifndef soap_write_PointerTons__DeviceCtrlReq
#define soap_write_PointerTons__DeviceCtrlReq(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons__DeviceCtrlReq(soap, data),0) || soap_put_PointerTons__DeviceCtrlReq(soap, data, "ns:DeviceCtrlReq", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__DeviceCtrlReq ** SOAP_FMAC4 soap_get_PointerTons__DeviceCtrlReq(struct soap*, struct ns__DeviceCtrlReq **, const char*, const char*);

#ifndef soap_read_PointerTons__DeviceCtrlReq
#define soap_read_PointerTons__DeviceCtrlReq(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons__DeviceCtrlReq(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons__setDeviceParamRsp
#define SOAP_TYPE_PointerTons__setDeviceParamRsp (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons__setDeviceParamRsp(struct soap*, struct ns__setDeviceParamRsp *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons__setDeviceParamRsp(struct soap*, const char *, int, struct ns__setDeviceParamRsp *const*, const char *);
SOAP_FMAC3 struct ns__setDeviceParamRsp ** SOAP_FMAC4 soap_in_PointerTons__setDeviceParamRsp(struct soap*, const char*, struct ns__setDeviceParamRsp **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons__setDeviceParamRsp(struct soap*, struct ns__setDeviceParamRsp *const*, const char*, const char*);

#ifndef soap_write_PointerTons__setDeviceParamRsp
#define soap_write_PointerTons__setDeviceParamRsp(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons__setDeviceParamRsp(soap, data),0) || soap_put_PointerTons__setDeviceParamRsp(soap, data, "ns:setDeviceParamRsp", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__setDeviceParamRsp ** SOAP_FMAC4 soap_get_PointerTons__setDeviceParamRsp(struct soap*, struct ns__setDeviceParamRsp **, const char*, const char*);

#ifndef soap_read_PointerTons__setDeviceParamRsp
#define soap_read_PointerTons__setDeviceParamRsp(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons__setDeviceParamRsp(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons__setDeviceParamReq
#define SOAP_TYPE_PointerTons__setDeviceParamReq (58)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons__setDeviceParamReq(struct soap*, struct ns__setDeviceParamReq *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons__setDeviceParamReq(struct soap*, const char *, int, struct ns__setDeviceParamReq *const*, const char *);
SOAP_FMAC3 struct ns__setDeviceParamReq ** SOAP_FMAC4 soap_in_PointerTons__setDeviceParamReq(struct soap*, const char*, struct ns__setDeviceParamReq **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons__setDeviceParamReq(struct soap*, struct ns__setDeviceParamReq *const*, const char*, const char*);

#ifndef soap_write_PointerTons__setDeviceParamReq
#define soap_write_PointerTons__setDeviceParamReq(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons__setDeviceParamReq(soap, data),0) || soap_put_PointerTons__setDeviceParamReq(soap, data, "ns:setDeviceParamReq", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__setDeviceParamReq ** SOAP_FMAC4 soap_get_PointerTons__setDeviceParamReq(struct soap*, struct ns__setDeviceParamReq **, const char*, const char*);

#ifndef soap_read_PointerTons__setDeviceParamReq
#define soap_read_PointerTons__setDeviceParamReq(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons__setDeviceParamReq(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons__GetDeviceParamRsp
#define SOAP_TYPE_PointerTons__GetDeviceParamRsp (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons__GetDeviceParamRsp(struct soap*, struct ns__GetDeviceParamRsp *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons__GetDeviceParamRsp(struct soap*, const char *, int, struct ns__GetDeviceParamRsp *const*, const char *);
SOAP_FMAC3 struct ns__GetDeviceParamRsp ** SOAP_FMAC4 soap_in_PointerTons__GetDeviceParamRsp(struct soap*, const char*, struct ns__GetDeviceParamRsp **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons__GetDeviceParamRsp(struct soap*, struct ns__GetDeviceParamRsp *const*, const char*, const char*);

#ifndef soap_write_PointerTons__GetDeviceParamRsp
#define soap_write_PointerTons__GetDeviceParamRsp(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons__GetDeviceParamRsp(soap, data),0) || soap_put_PointerTons__GetDeviceParamRsp(soap, data, "ns:GetDeviceParamRsp", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__GetDeviceParamRsp ** SOAP_FMAC4 soap_get_PointerTons__GetDeviceParamRsp(struct soap*, struct ns__GetDeviceParamRsp **, const char*, const char*);

#ifndef soap_read_PointerTons__GetDeviceParamRsp
#define soap_read_PointerTons__GetDeviceParamRsp(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons__GetDeviceParamRsp(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons__GetDeviceParamReq
#define SOAP_TYPE_PointerTons__GetDeviceParamReq (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons__GetDeviceParamReq(struct soap*, struct ns__GetDeviceParamReq *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons__GetDeviceParamReq(struct soap*, const char *, int, struct ns__GetDeviceParamReq *const*, const char *);
SOAP_FMAC3 struct ns__GetDeviceParamReq ** SOAP_FMAC4 soap_in_PointerTons__GetDeviceParamReq(struct soap*, const char*, struct ns__GetDeviceParamReq **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons__GetDeviceParamReq(struct soap*, struct ns__GetDeviceParamReq *const*, const char*, const char*);

#ifndef soap_write_PointerTons__GetDeviceParamReq
#define soap_write_PointerTons__GetDeviceParamReq(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons__GetDeviceParamReq(soap, data),0) || soap_put_PointerTons__GetDeviceParamReq(soap, data, "ns:GetDeviceParamReq", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__GetDeviceParamReq ** SOAP_FMAC4 soap_get_PointerTons__GetDeviceParamReq(struct soap*, struct ns__GetDeviceParamReq **, const char*, const char*);

#ifndef soap_read_PointerTons__GetDeviceParamReq
#define soap_read_PointerTons__GetDeviceParamReq(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons__GetDeviceParamReq(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons__GetDeviceListRsp
#define SOAP_TYPE_PointerTons__GetDeviceListRsp (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons__GetDeviceListRsp(struct soap*, struct ns__GetDeviceListRsp *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons__GetDeviceListRsp(struct soap*, const char *, int, struct ns__GetDeviceListRsp *const*, const char *);
SOAP_FMAC3 struct ns__GetDeviceListRsp ** SOAP_FMAC4 soap_in_PointerTons__GetDeviceListRsp(struct soap*, const char*, struct ns__GetDeviceListRsp **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons__GetDeviceListRsp(struct soap*, struct ns__GetDeviceListRsp *const*, const char*, const char*);

#ifndef soap_write_PointerTons__GetDeviceListRsp
#define soap_write_PointerTons__GetDeviceListRsp(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons__GetDeviceListRsp(soap, data),0) || soap_put_PointerTons__GetDeviceListRsp(soap, data, "ns:GetDeviceListRsp", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__GetDeviceListRsp ** SOAP_FMAC4 soap_get_PointerTons__GetDeviceListRsp(struct soap*, struct ns__GetDeviceListRsp **, const char*, const char*);

#ifndef soap_read_PointerTons__GetDeviceListRsp
#define soap_read_PointerTons__GetDeviceListRsp(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons__GetDeviceListRsp(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons__GetDeviceListReq
#define SOAP_TYPE_PointerTons__GetDeviceListReq (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons__GetDeviceListReq(struct soap*, struct ns__GetDeviceListReq *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons__GetDeviceListReq(struct soap*, const char *, int, struct ns__GetDeviceListReq *const*, const char *);
SOAP_FMAC3 struct ns__GetDeviceListReq ** SOAP_FMAC4 soap_in_PointerTons__GetDeviceListReq(struct soap*, const char*, struct ns__GetDeviceListReq **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons__GetDeviceListReq(struct soap*, struct ns__GetDeviceListReq *const*, const char*, const char*);

#ifndef soap_write_PointerTons__GetDeviceListReq
#define soap_write_PointerTons__GetDeviceListReq(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons__GetDeviceListReq(soap, data),0) || soap_put_PointerTons__GetDeviceListReq(soap, data, "ns:GetDeviceListReq", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__GetDeviceListReq ** SOAP_FMAC4 soap_get_PointerTons__GetDeviceListReq(struct soap*, struct ns__GetDeviceListReq **, const char*, const char*);

#ifndef soap_read_PointerTons__GetDeviceListReq
#define soap_read_PointerTons__GetDeviceListReq(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons__GetDeviceListReq(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons__RemoveDeviceRsp
#define SOAP_TYPE_PointerTons__RemoveDeviceRsp (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons__RemoveDeviceRsp(struct soap*, struct ns__RemoveDeviceRsp *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons__RemoveDeviceRsp(struct soap*, const char *, int, struct ns__RemoveDeviceRsp *const*, const char *);
SOAP_FMAC3 struct ns__RemoveDeviceRsp ** SOAP_FMAC4 soap_in_PointerTons__RemoveDeviceRsp(struct soap*, const char*, struct ns__RemoveDeviceRsp **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons__RemoveDeviceRsp(struct soap*, struct ns__RemoveDeviceRsp *const*, const char*, const char*);

#ifndef soap_write_PointerTons__RemoveDeviceRsp
#define soap_write_PointerTons__RemoveDeviceRsp(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons__RemoveDeviceRsp(soap, data),0) || soap_put_PointerTons__RemoveDeviceRsp(soap, data, "ns:RemoveDeviceRsp", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__RemoveDeviceRsp ** SOAP_FMAC4 soap_get_PointerTons__RemoveDeviceRsp(struct soap*, struct ns__RemoveDeviceRsp **, const char*, const char*);

#ifndef soap_read_PointerTons__RemoveDeviceRsp
#define soap_read_PointerTons__RemoveDeviceRsp(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons__RemoveDeviceRsp(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons__RemoveDeviceReq
#define SOAP_TYPE_PointerTons__RemoveDeviceReq (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons__RemoveDeviceReq(struct soap*, struct ns__RemoveDeviceReq *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons__RemoveDeviceReq(struct soap*, const char *, int, struct ns__RemoveDeviceReq *const*, const char *);
SOAP_FMAC3 struct ns__RemoveDeviceReq ** SOAP_FMAC4 soap_in_PointerTons__RemoveDeviceReq(struct soap*, const char*, struct ns__RemoveDeviceReq **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons__RemoveDeviceReq(struct soap*, struct ns__RemoveDeviceReq *const*, const char*, const char*);

#ifndef soap_write_PointerTons__RemoveDeviceReq
#define soap_write_PointerTons__RemoveDeviceReq(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons__RemoveDeviceReq(soap, data),0) || soap_put_PointerTons__RemoveDeviceReq(soap, data, "ns:RemoveDeviceReq", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__RemoveDeviceReq ** SOAP_FMAC4 soap_get_PointerTons__RemoveDeviceReq(struct soap*, struct ns__RemoveDeviceReq **, const char*, const char*);

#ifndef soap_read_PointerTons__RemoveDeviceReq
#define soap_read_PointerTons__RemoveDeviceReq(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons__RemoveDeviceReq(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons__SetHostDetailsRsp
#define SOAP_TYPE_PointerTons__SetHostDetailsRsp (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons__SetHostDetailsRsp(struct soap*, struct ns__SetHostDetailsRsp *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons__SetHostDetailsRsp(struct soap*, const char *, int, struct ns__SetHostDetailsRsp *const*, const char *);
SOAP_FMAC3 struct ns__SetHostDetailsRsp ** SOAP_FMAC4 soap_in_PointerTons__SetHostDetailsRsp(struct soap*, const char*, struct ns__SetHostDetailsRsp **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons__SetHostDetailsRsp(struct soap*, struct ns__SetHostDetailsRsp *const*, const char*, const char*);

#ifndef soap_write_PointerTons__SetHostDetailsRsp
#define soap_write_PointerTons__SetHostDetailsRsp(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons__SetHostDetailsRsp(soap, data),0) || soap_put_PointerTons__SetHostDetailsRsp(soap, data, "ns:SetHostDetailsRsp", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__SetHostDetailsRsp ** SOAP_FMAC4 soap_get_PointerTons__SetHostDetailsRsp(struct soap*, struct ns__SetHostDetailsRsp **, const char*, const char*);

#ifndef soap_read_PointerTons__SetHostDetailsRsp
#define soap_read_PointerTons__SetHostDetailsRsp(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons__SetHostDetailsRsp(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons__SetHostDetailsReq
#define SOAP_TYPE_PointerTons__SetHostDetailsReq (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons__SetHostDetailsReq(struct soap*, struct ns__SetHostDetailsReq *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons__SetHostDetailsReq(struct soap*, const char *, int, struct ns__SetHostDetailsReq *const*, const char *);
SOAP_FMAC3 struct ns__SetHostDetailsReq ** SOAP_FMAC4 soap_in_PointerTons__SetHostDetailsReq(struct soap*, const char*, struct ns__SetHostDetailsReq **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons__SetHostDetailsReq(struct soap*, struct ns__SetHostDetailsReq *const*, const char*, const char*);

#ifndef soap_write_PointerTons__SetHostDetailsReq
#define soap_write_PointerTons__SetHostDetailsReq(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons__SetHostDetailsReq(soap, data),0) || soap_put_PointerTons__SetHostDetailsReq(soap, data, "ns:SetHostDetailsReq", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__SetHostDetailsReq ** SOAP_FMAC4 soap_get_PointerTons__SetHostDetailsReq(struct soap*, struct ns__SetHostDetailsReq **, const char*, const char*);

#ifndef soap_read_PointerTons__SetHostDetailsReq
#define soap_read_PointerTons__SetHostDetailsReq(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons__SetHostDetailsReq(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons__GetHostDetailsRsp
#define SOAP_TYPE_PointerTons__GetHostDetailsRsp (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons__GetHostDetailsRsp(struct soap*, struct ns__GetHostDetailsRsp *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons__GetHostDetailsRsp(struct soap*, const char *, int, struct ns__GetHostDetailsRsp *const*, const char *);
SOAP_FMAC3 struct ns__GetHostDetailsRsp ** SOAP_FMAC4 soap_in_PointerTons__GetHostDetailsRsp(struct soap*, const char*, struct ns__GetHostDetailsRsp **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons__GetHostDetailsRsp(struct soap*, struct ns__GetHostDetailsRsp *const*, const char*, const char*);

#ifndef soap_write_PointerTons__GetHostDetailsRsp
#define soap_write_PointerTons__GetHostDetailsRsp(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons__GetHostDetailsRsp(soap, data),0) || soap_put_PointerTons__GetHostDetailsRsp(soap, data, "ns:GetHostDetailsRsp", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__GetHostDetailsRsp ** SOAP_FMAC4 soap_get_PointerTons__GetHostDetailsRsp(struct soap*, struct ns__GetHostDetailsRsp **, const char*, const char*);

#ifndef soap_read_PointerTons__GetHostDetailsRsp
#define soap_read_PointerTons__GetHostDetailsRsp(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons__GetHostDetailsRsp(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons__GetHostDetailsReq
#define SOAP_TYPE_PointerTons__GetHostDetailsReq (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons__GetHostDetailsReq(struct soap*, struct ns__GetHostDetailsReq *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons__GetHostDetailsReq(struct soap*, const char *, int, struct ns__GetHostDetailsReq *const*, const char *);
SOAP_FMAC3 struct ns__GetHostDetailsReq ** SOAP_FMAC4 soap_in_PointerTons__GetHostDetailsReq(struct soap*, const char*, struct ns__GetHostDetailsReq **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons__GetHostDetailsReq(struct soap*, struct ns__GetHostDetailsReq *const*, const char*, const char*);

#ifndef soap_write_PointerTons__GetHostDetailsReq
#define soap_write_PointerTons__GetHostDetailsReq(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons__GetHostDetailsReq(soap, data),0) || soap_put_PointerTons__GetHostDetailsReq(soap, data, "ns:GetHostDetailsReq", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__GetHostDetailsReq ** SOAP_FMAC4 soap_get_PointerTons__GetHostDetailsReq(struct soap*, struct ns__GetHostDetailsReq **, const char*, const char*);

#ifndef soap_read_PointerTons__GetHostDetailsReq
#define soap_read_PointerTons__GetHostDetailsReq(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons__GetHostDetailsReq(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToPointerTounsignedByte
#define SOAP_TYPE_PointerToPointerTounsignedByte (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerTounsignedByte(struct soap*, unsigned char **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerTounsignedByte(struct soap*, const char *, int, unsigned char **const*, const char *);
SOAP_FMAC3 unsigned char *** SOAP_FMAC4 soap_in_PointerToPointerTounsignedByte(struct soap*, const char*, unsigned char ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerTounsignedByte(struct soap*, unsigned char **const*, const char*, const char*);

#ifndef soap_write_PointerToPointerTounsignedByte
#define soap_write_PointerToPointerTounsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToPointerTounsignedByte(soap, data),0) || soap_put_PointerToPointerTounsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char *** SOAP_FMAC4 soap_get_PointerToPointerTounsignedByte(struct soap*, unsigned char ***, const char*, const char*);

#ifndef soap_read_PointerToPointerTounsignedByte
#define soap_read_PointerToPointerTounsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToPointerTounsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTounsignedByte
#define SOAP_TYPE_PointerTounsignedByte (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTounsignedByte(struct soap*, unsigned char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTounsignedByte(struct soap*, const char *, int, unsigned char *const*, const char *);
SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_in_PointerTounsignedByte(struct soap*, const char*, unsigned char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTounsignedByte(struct soap*, unsigned char *const*, const char*, const char*);

#ifndef soap_write_PointerTounsignedByte
#define soap_write_PointerTounsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTounsignedByte(soap, data),0) || soap_put_PointerTounsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_get_PointerTounsignedByte(struct soap*, unsigned char **, const char*, const char*);

#ifndef soap_read_PointerTounsignedByte
#define soap_read_PointerTounsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTounsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToPointerTons__stCall_DeviceNode
#define SOAP_TYPE_PointerToPointerTons__stCall_DeviceNode (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerTons__stCall_DeviceNode(struct soap*, struct ns__stCall_DeviceNode **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerTons__stCall_DeviceNode(struct soap*, const char *, int, struct ns__stCall_DeviceNode **const*, const char *);
SOAP_FMAC3 struct ns__stCall_DeviceNode *** SOAP_FMAC4 soap_in_PointerToPointerTons__stCall_DeviceNode(struct soap*, const char*, struct ns__stCall_DeviceNode ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerTons__stCall_DeviceNode(struct soap*, struct ns__stCall_DeviceNode **const*, const char*, const char*);

#ifndef soap_write_PointerToPointerTons__stCall_DeviceNode
#define soap_write_PointerToPointerTons__stCall_DeviceNode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToPointerTons__stCall_DeviceNode(soap, data),0) || soap_put_PointerToPointerTons__stCall_DeviceNode(soap, data, "ns:stCall-DeviceNode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__stCall_DeviceNode *** SOAP_FMAC4 soap_get_PointerToPointerTons__stCall_DeviceNode(struct soap*, struct ns__stCall_DeviceNode ***, const char*, const char*);

#ifndef soap_read_PointerToPointerTons__stCall_DeviceNode
#define soap_read_PointerToPointerTons__stCall_DeviceNode(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToPointerTons__stCall_DeviceNode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons__stCall_DeviceNode
#define SOAP_TYPE_PointerTons__stCall_DeviceNode (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons__stCall_DeviceNode(struct soap*, struct ns__stCall_DeviceNode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons__stCall_DeviceNode(struct soap*, const char *, int, struct ns__stCall_DeviceNode *const*, const char *);
SOAP_FMAC3 struct ns__stCall_DeviceNode ** SOAP_FMAC4 soap_in_PointerTons__stCall_DeviceNode(struct soap*, const char*, struct ns__stCall_DeviceNode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons__stCall_DeviceNode(struct soap*, struct ns__stCall_DeviceNode *const*, const char*, const char*);

#ifndef soap_write_PointerTons__stCall_DeviceNode
#define soap_write_PointerTons__stCall_DeviceNode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons__stCall_DeviceNode(soap, data),0) || soap_put_PointerTons__stCall_DeviceNode(soap, data, "ns:stCall-DeviceNode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns__stCall_DeviceNode ** SOAP_FMAC4 soap_get_PointerTons__stCall_DeviceNode(struct soap*, struct ns__stCall_DeviceNode **, const char*, const char*);

#ifndef soap_read_PointerTons__stCall_DeviceNode
#define soap_read_PointerTons__stCall_DeviceNode(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons__stCall_DeviceNode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__QName(soap, data),0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_string(soap, data),0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_Array32Ofbyte
#define SOAP_TYPE_Array32Ofbyte (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_Array32Ofbyte(struct soap*, char[32]);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_Array32Ofbyte(struct soap*, char const[32]);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_Array32Ofbyte(struct soap*, const char*, int, char const[32], const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_Array32Ofbyte(struct soap*, const char*, char[32], const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_Array32Ofbyte(struct soap*, char const[32], const char*, const char*);

#ifndef soap_write_Array32Ofbyte
#define soap_write_Array32Ofbyte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_Array32Ofbyte(soap, data),0) || soap_put_Array32Ofbyte(soap, data, "SOAP-ENC:Array", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_Array32Ofbyte(struct soap*, char[32], const char*, const char*);

#ifndef soap_read_Array32Ofbyte
#define soap_read_Array32Ofbyte(soap, data) ( soap_begin_recv(soap) || !soap_get_Array32Ofbyte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_Array24OfunsignedByte
#define SOAP_TYPE_Array24OfunsignedByte (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_Array24OfunsignedByte(struct soap*, unsigned char[24]);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_Array24OfunsignedByte(struct soap*, unsigned char const[24]);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_Array24OfunsignedByte(struct soap*, const char*, int, unsigned char const[24], const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_Array24OfunsignedByte(struct soap*, const char*, unsigned char[24], const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_Array24OfunsignedByte(struct soap*, unsigned char const[24], const char*, const char*);

#ifndef soap_write_Array24OfunsignedByte
#define soap_write_Array24OfunsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_Array24OfunsignedByte(soap, data),0) || soap_put_Array24OfunsignedByte(soap, data, "SOAP-ENC:Array", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_Array24OfunsignedByte(struct soap*, unsigned char[24], const char*, const char*);

#ifndef soap_read_Array24OfunsignedByte
#define soap_read_Array24OfunsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_Array24OfunsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_Array2OfunsignedByte
#define SOAP_TYPE_Array2OfunsignedByte (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_Array2OfunsignedByte(struct soap*, unsigned char[2]);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_Array2OfunsignedByte(struct soap*, unsigned char const[2]);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_Array2OfunsignedByte(struct soap*, const char*, int, unsigned char const[2], const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_Array2OfunsignedByte(struct soap*, const char*, unsigned char[2], const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_Array2OfunsignedByte(struct soap*, unsigned char const[2], const char*, const char*);

#ifndef soap_write_Array2OfunsignedByte
#define soap_write_Array2OfunsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_Array2OfunsignedByte(soap, data),0) || soap_put_Array2OfunsignedByte(soap, data, "SOAP-ENC:Array", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_Array2OfunsignedByte(struct soap*, unsigned char[2], const char*, const char*);

#ifndef soap_read_Array2OfunsignedByte
#define soap_read_Array2OfunsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_Array2OfunsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_Array8OfunsignedByte
#define SOAP_TYPE_Array8OfunsignedByte (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_Array8OfunsignedByte(struct soap*, unsigned char[8]);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_Array8OfunsignedByte(struct soap*, unsigned char const[8]);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_Array8OfunsignedByte(struct soap*, const char*, int, unsigned char const[8], const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_Array8OfunsignedByte(struct soap*, const char*, unsigned char[8], const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_Array8OfunsignedByte(struct soap*, unsigned char const[8], const char*, const char*);

#ifndef soap_write_Array8OfunsignedByte
#define soap_write_Array8OfunsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_Array8OfunsignedByte(soap, data),0) || soap_put_Array8OfunsignedByte(soap, data, "SOAP-ENC:Array", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_Array8OfunsignedByte(struct soap*, unsigned char[8], const char*, const char*);

#ifndef soap_read_Array8OfunsignedByte
#define soap_read_Array8OfunsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_Array8OfunsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_Array64Ofbyte
#define SOAP_TYPE_Array64Ofbyte (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_Array64Ofbyte(struct soap*, char[64]);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_Array64Ofbyte(struct soap*, char const[64]);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_Array64Ofbyte(struct soap*, const char*, int, char const[64], const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_Array64Ofbyte(struct soap*, const char*, char[64], const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_Array64Ofbyte(struct soap*, char const[64], const char*, const char*);

#ifndef soap_write_Array64Ofbyte
#define soap_write_Array64Ofbyte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_Array64Ofbyte(soap, data),0) || soap_put_Array64Ofbyte(soap, data, "SOAP-ENC:Array", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_Array64Ofbyte(struct soap*, char[64], const char*, const char*);

#ifndef soap_read_Array64Ofbyte
#define soap_read_Array64Ofbyte(soap, data) ( soap_begin_recv(soap) || !soap_get_Array64Ofbyte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

/* End of soapH.h */
