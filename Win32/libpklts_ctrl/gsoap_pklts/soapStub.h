/* soapStub.h
   Generated by gSOAP 2.8.18 from gsoap_pklts.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 20818
# error "GSOAP VERSION MISMATCH IN GENERATED CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_ns__ErrMessage
#define SOAP_TYPE_ns__ErrMessage (7)
/* ns:ErrMessage */
enum ns__ErrMessage { ALL_SUCCEED = 0, ERRNET_WSAStartupFailed = 1, ERRNET_GetAddrInfoError = 2, ERRNET_SocketFailedErr = 3, ERRNET_ConnectionFailed = 4, ERRNET_SendDataFailed = 5, ERRNET_RecvDataFailed = 6, ERRNET_ShutDownFailed = 7, ERRTRANS_ERROR_MARK = 16, ERRTRANS_LESS_DATA = 17, ERRTRANS_DST_NOT_REACHABLE = 18, ERRTRANS_ERROR_MSG_TYPE = 19, ERRTRANS_ERROR_DATA = 20 };
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_ns__GetHostDetailsReq
#define SOAP_TYPE_ns__GetHostDetailsReq (8)
/* ns:GetHostDetailsReq */
struct ns__GetHostDetailsReq
{
public:
	unsigned int macID;	/* required element of type xsd:unsignedInt */
public:
	int soap_type() const { return 8; } /* = unique type id SOAP_TYPE_ns__GetHostDetailsReq */
};
#endif

#ifndef SOAP_TYPE_ns__GetHostDetailsRsp
#define SOAP_TYPE_ns__GetHostDetailsRsp (10)
/* ns:GetHostDetailsRsp */
struct ns__GetHostDetailsRsp
{
public:
	enum ns__ErrMessage retCode;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns:ErrMessage */
	unsigned char DoneCode;	/* required element of type xsd:unsignedByte */
	unsigned short HostType;	/* required element of type xsd:unsignedShort */
	unsigned short FirmwareVersion;	/* required element of type xsd:unsignedShort */
	char HostName[64];	/* required element of type Array64Ofbyte */
	char HostInfo[64];	/* required element of type Array64Ofbyte */
	unsigned char ConnetType;	/* required element of type xsd:unsignedByte */
	unsigned char IEEEAdd[8];	/* required element of type Array8OfunsignedByte */
	unsigned char IEEEAdd_Flag;	/* required element of type xsd:unsignedByte */
	unsigned char PANID[2];	/* required element of type Array2OfunsignedByte */
	unsigned char PANID_Flag;	/* required element of type xsd:unsignedByte */
	unsigned char EPANID[8];	/* required element of type Array8OfunsignedByte */
	unsigned char EPANID_Flag;	/* required element of type xsd:unsignedByte */
	unsigned short SensorNum;	/* required element of type xsd:unsignedShort */
	unsigned short RelayNum;	/* required element of type xsd:unsignedShort */
	unsigned short ANSensorNum;	/* required element of type xsd:unsignedShort */
	unsigned short ANRelayNum;	/* required element of type xsd:unsignedShort */
public:
	int soap_type() const { return 10; } /* = unique type id SOAP_TYPE_ns__GetHostDetailsRsp */
};
#endif

#ifndef SOAP_TYPE_ns__SetHostDetailsReq
#define SOAP_TYPE_ns__SetHostDetailsReq (17)
/* ns:SetHostDetailsReq */
struct ns__SetHostDetailsReq
{
public:
	unsigned int macID;	/* required element of type xsd:unsignedInt */
	char HostName[64];	/* required element of type Array64Ofbyte */
	char HostInfo[64];	/* required element of type Array64Ofbyte */
public:
	int soap_type() const { return 17; } /* = unique type id SOAP_TYPE_ns__SetHostDetailsReq */
};
#endif

#ifndef SOAP_TYPE_ns__SetHostDetailsRsp
#define SOAP_TYPE_ns__SetHostDetailsRsp (18)
/* ns:SetHostDetailsRsp */
struct ns__SetHostDetailsRsp
{
public:
	enum ns__ErrMessage retCode;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns:ErrMessage */
	unsigned char DoneCode;	/* required element of type xsd:unsignedByte */
public:
	int soap_type() const { return 18; } /* = unique type id SOAP_TYPE_ns__SetHostDetailsRsp */
};
#endif

#ifndef SOAP_TYPE_ns__RemoveDeviceReq
#define SOAP_TYPE_ns__RemoveDeviceReq (19)
/* ns:RemoveDeviceReq */
struct ns__RemoveDeviceReq
{
public:
	unsigned int macID;	/* required element of type xsd:unsignedInt */
	unsigned char DeviceID[24];	/* required element of type Array24OfunsignedByte */
public:
	int soap_type() const { return 19; } /* = unique type id SOAP_TYPE_ns__RemoveDeviceReq */
};
#endif

#ifndef SOAP_TYPE_ns__RemoveDeviceRsp
#define SOAP_TYPE_ns__RemoveDeviceRsp (21)
/* ns:RemoveDeviceRsp */
struct ns__RemoveDeviceRsp
{
public:
	enum ns__ErrMessage retCode;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns:ErrMessage */
	unsigned char DoneCode;	/* required element of type xsd:unsignedByte */
public:
	int soap_type() const { return 21; } /* = unique type id SOAP_TYPE_ns__RemoveDeviceRsp */
};
#endif

#ifndef SOAP_TYPE_ns__GetDeviceListReq
#define SOAP_TYPE_ns__GetDeviceListReq (22)
/* ns:GetDeviceListReq */
struct ns__GetDeviceListReq
{
public:
	unsigned int macID;	/* required element of type xsd:unsignedInt */
public:
	int soap_type() const { return 22; } /* = unique type id SOAP_TYPE_ns__GetDeviceListReq */
};
#endif

#ifndef SOAP_TYPE_ns__stCall_DeviceNode
#define SOAP_TYPE_ns__stCall_DeviceNode (23)
/* ns:stCall-DeviceNode */
struct ns__stCall_DeviceNode
{
public:
	char DeviceName[32];	/* required element of type Array32Ofbyte */
	char No[64];	/* required element of type Array64Ofbyte */
	unsigned char DeviceID[24];	/* required element of type Array24OfunsignedByte */
public:
	int soap_type() const { return 23; } /* = unique type id SOAP_TYPE_ns__stCall_DeviceNode */
};
#endif

#ifndef SOAP_TYPE_ns__DeviceNodeArray
#define SOAP_TYPE_ns__DeviceNodeArray (25)
/* ns:DeviceNodeArray */
struct ns__DeviceNodeArray
{
public:
	int __size;	/* sequence of elements <item> */
	struct ns__stCall_DeviceNode **__ptr;
public:
	int soap_type() const { return 25; } /* = unique type id SOAP_TYPE_ns__DeviceNodeArray */
};
#endif

#ifndef SOAP_TYPE_ns__GetDeviceListRsp
#define SOAP_TYPE_ns__GetDeviceListRsp (28)
/* ns:GetDeviceListRsp */
struct ns__GetDeviceListRsp
{
public:
	enum ns__ErrMessage retCode;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns:ErrMessage */
	unsigned char DoneCode;	/* required element of type xsd:unsignedByte */
	unsigned short nDevCount;	/* required element of type xsd:unsignedShort */
	struct ns__DeviceNodeArray array;	/* required element of type ns:DeviceNodeArray */
public:
	int soap_type() const { return 28; } /* = unique type id SOAP_TYPE_ns__GetDeviceListRsp */
};
#endif

#ifndef SOAP_TYPE_ns__GetDeviceParamReq
#define SOAP_TYPE_ns__GetDeviceParamReq (29)
/* ns:GetDeviceParamReq */
struct ns__GetDeviceParamReq
{
public:
	unsigned int macID;	/* required element of type xsd:unsignedInt */
	unsigned char DeviceID[24];	/* required element of type Array24OfunsignedByte */
	unsigned char Opt_DeviceName;	/* required element of type xsd:unsignedByte */
	unsigned char Opt_DeviceInfo;	/* required element of type xsd:unsignedByte */
	unsigned char Opt_DALStatus;	/* required element of type xsd:unsignedByte */
public:
	int soap_type() const { return 29; } /* = unique type id SOAP_TYPE_ns__GetDeviceParamReq */
};
#endif

#ifndef SOAP_TYPE_ns__DeviceDAL
#define SOAP_TYPE_ns__DeviceDAL (30)
/* ns:DeviceDAL */
struct ns__DeviceDAL
{
public:
	int __size;	/* sequence of elements <item> */
	unsigned char **__ptr;
public:
	int soap_type() const { return 30; } /* = unique type id SOAP_TYPE_ns__DeviceDAL */
};
#endif

#ifndef SOAP_TYPE_ns__GetDeviceParamRsp
#define SOAP_TYPE_ns__GetDeviceParamRsp (33)
/* ns:GetDeviceParamRsp */
struct ns__GetDeviceParamRsp
{
public:
	enum ns__ErrMessage retCode;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns:ErrMessage */
	unsigned char DoneCode;	/* required element of type xsd:unsignedByte */
	unsigned char DeviceID[24];	/* required element of type Array24OfunsignedByte */
	unsigned char Opt_DeviceName;	/* required element of type xsd:unsignedByte */
	unsigned char Opt_DeviceInfo;	/* required element of type xsd:unsignedByte */
	unsigned char Opt_DALStatus;	/* required element of type xsd:unsignedByte */
	char DeviceName[32];	/* required element of type Array32Ofbyte */
	char DeviceInfo[64];	/* required element of type Array64Ofbyte */
	struct ns__DeviceDAL DAL;	/* required element of type ns:DeviceDAL */
public:
	int soap_type() const { return 33; } /* = unique type id SOAP_TYPE_ns__GetDeviceParamRsp */
};
#endif

#ifndef SOAP_TYPE_ns__setDeviceParamReq
#define SOAP_TYPE_ns__setDeviceParamReq (34)
/* ns:setDeviceParamReq */
struct ns__setDeviceParamReq
{
public:
	unsigned int macID;	/* required element of type xsd:unsignedInt */
	unsigned char DeviceID[24];	/* required element of type Array24OfunsignedByte */
	unsigned char Opt_DeviceName;	/* required element of type xsd:unsignedByte */
	unsigned char Opt_DeviceInfo;	/* required element of type xsd:unsignedByte */
	char DeviceName[32];	/* required element of type Array32Ofbyte */
	char DeviceInfo[64];	/* required element of type Array64Ofbyte */
public:
	int soap_type() const { return 34; } /* = unique type id SOAP_TYPE_ns__setDeviceParamReq */
};
#endif

#ifndef SOAP_TYPE_ns__setDeviceParamRsp
#define SOAP_TYPE_ns__setDeviceParamRsp (35)
/* ns:setDeviceParamRsp */
struct ns__setDeviceParamRsp
{
public:
	enum ns__ErrMessage retCode;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns:ErrMessage */
	unsigned char DoneCode;	/* required element of type xsd:unsignedByte */
public:
	int soap_type() const { return 35; } /* = unique type id SOAP_TYPE_ns__setDeviceParamRsp */
};
#endif

#ifndef SOAP_TYPE_ns__DeviceCtrlReq
#define SOAP_TYPE_ns__DeviceCtrlReq (36)
/* ns:DeviceCtrlReq */
struct ns__DeviceCtrlReq
{
public:
	unsigned int macID;	/* required element of type xsd:unsignedInt */
	unsigned char DeviceID[24];	/* required element of type Array24OfunsignedByte */
	struct ns__DeviceDAL DAL;	/* required element of type ns:DeviceDAL */
public:
	int soap_type() const { return 36; } /* = unique type id SOAP_TYPE_ns__DeviceCtrlReq */
};
#endif

#ifndef SOAP_TYPE_ns__DeviceCtrlRsp
#define SOAP_TYPE_ns__DeviceCtrlRsp (37)
/* ns:DeviceCtrlRsp */
struct ns__DeviceCtrlRsp
{
public:
	enum ns__ErrMessage retCode;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns:ErrMessage */
	unsigned char DoneCode;	/* required element of type xsd:unsignedByte */
public:
	int soap_type() const { return 37; } /* = unique type id SOAP_TYPE_ns__DeviceCtrlRsp */
};
#endif

#ifndef SOAP_TYPE_ns__getMACInfo
#define SOAP_TYPE_ns__getMACInfo (41)
/* ns:getMACInfo */
struct ns__getMACInfo
{
public:
	struct ns__GetHostDetailsReq *pInData;	/* optional element of type ns:GetHostDetailsReq */
public:
	int soap_type() const { return 41; } /* = unique type id SOAP_TYPE_ns__getMACInfo */
};
#endif

#ifndef SOAP_TYPE_ns__setHostDetails
#define SOAP_TYPE_ns__setHostDetails (45)
/* ns:setHostDetails */
struct ns__setHostDetails
{
public:
	struct ns__SetHostDetailsReq *pInData;	/* optional element of type ns:SetHostDetailsReq */
public:
	int soap_type() const { return 45; } /* = unique type id SOAP_TYPE_ns__setHostDetails */
};
#endif

#ifndef SOAP_TYPE_ns__removeDevice
#define SOAP_TYPE_ns__removeDevice (49)
/* ns:removeDevice */
struct ns__removeDevice
{
public:
	struct ns__RemoveDeviceReq *pInData;	/* optional element of type ns:RemoveDeviceReq */
public:
	int soap_type() const { return 49; } /* = unique type id SOAP_TYPE_ns__removeDevice */
};
#endif

#ifndef SOAP_TYPE_ns__getDeviceList
#define SOAP_TYPE_ns__getDeviceList (53)
/* ns:getDeviceList */
struct ns__getDeviceList
{
public:
	struct ns__GetDeviceListReq *pInData;	/* optional element of type ns:GetDeviceListReq */
public:
	int soap_type() const { return 53; } /* = unique type id SOAP_TYPE_ns__getDeviceList */
};
#endif

#ifndef SOAP_TYPE_ns__getDeviceParam
#define SOAP_TYPE_ns__getDeviceParam (57)
/* ns:getDeviceParam */
struct ns__getDeviceParam
{
public:
	struct ns__GetDeviceParamReq *pInBuf;	/* optional element of type ns:GetDeviceParamReq */
public:
	int soap_type() const { return 57; } /* = unique type id SOAP_TYPE_ns__getDeviceParam */
};
#endif

#ifndef SOAP_TYPE_ns__setDeviceParam
#define SOAP_TYPE_ns__setDeviceParam (61)
/* ns:setDeviceParam */
struct ns__setDeviceParam
{
public:
	struct ns__setDeviceParamReq *pInData;	/* optional element of type ns:setDeviceParamReq */
public:
	int soap_type() const { return 61; } /* = unique type id SOAP_TYPE_ns__setDeviceParam */
};
#endif

#ifndef SOAP_TYPE_ns__deviceCtrl
#define SOAP_TYPE_ns__deviceCtrl (65)
/* ns:deviceCtrl */
struct ns__deviceCtrl
{
public:
	struct ns__DeviceCtrlReq *pInData;	/* optional element of type ns:DeviceCtrlReq */
public:
	int soap_type() const { return 65; } /* = unique type id SOAP_TYPE_ns__deviceCtrl */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (66)
/* SOAP Header: */
struct SOAP_ENV__Header
{
public:
	int soap_type() const { return 66; } /* = unique type id SOAP_TYPE_SOAP_ENV__Header */
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (67)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
public:
	int soap_type() const { return 67; } /* = unique type id SOAP_TYPE_SOAP_ENV__Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (69)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
public:
	int soap_type() const { return 69; } /* = unique type id SOAP_TYPE_SOAP_ENV__Detail */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (72)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 72; } /* = unique type id SOAP_TYPE_SOAP_ENV__Reason */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (73)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
public:
	int soap_type() const { return 73; } /* = unique type id SOAP_TYPE_SOAP_ENV__Fault */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 ns__getMACInfo(struct soap*, struct ns__GetHostDetailsReq *pInData, struct ns__GetHostDetailsRsp *pOutputBuf);

SOAP_FMAC5 int SOAP_FMAC6 ns__setHostDetails(struct soap*, struct ns__SetHostDetailsReq *pInData, struct ns__SetHostDetailsRsp *pOutputBuf);

SOAP_FMAC5 int SOAP_FMAC6 ns__removeDevice(struct soap*, struct ns__RemoveDeviceReq *pInData, struct ns__RemoveDeviceRsp *pOutputBuf);

SOAP_FMAC5 int SOAP_FMAC6 ns__getDeviceList(struct soap*, struct ns__GetDeviceListReq *pInData, struct ns__GetDeviceListRsp *ppOutputBuf);

SOAP_FMAC5 int SOAP_FMAC6 ns__getDeviceParam(struct soap*, struct ns__GetDeviceParamReq *pInBuf, struct ns__GetDeviceParamRsp *ppOutputBuf);

SOAP_FMAC5 int SOAP_FMAC6 ns__setDeviceParam(struct soap*, struct ns__setDeviceParamReq *pInData, struct ns__setDeviceParamRsp *pOutputBuf);

SOAP_FMAC5 int SOAP_FMAC6 ns__deviceCtrl(struct soap*, struct ns__DeviceCtrlReq *pInData, struct ns__DeviceCtrlRsp *pOutputBuf);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getMACInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__setHostDetails(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__removeDevice(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getDeviceList(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getDeviceParam(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__setDeviceParam(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__deviceCtrl(struct soap*);

/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__getMACInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns__GetHostDetailsReq *pInData, struct ns__GetHostDetailsRsp *pOutputBuf);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__setHostDetails(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns__SetHostDetailsReq *pInData, struct ns__SetHostDetailsRsp *pOutputBuf);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__removeDevice(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns__RemoveDeviceReq *pInData, struct ns__RemoveDeviceRsp *pOutputBuf);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__getDeviceList(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns__GetDeviceListReq *pInData, struct ns__GetDeviceListRsp *ppOutputBuf);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__getDeviceParam(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns__GetDeviceParamReq *pInBuf, struct ns__GetDeviceParamRsp *ppOutputBuf);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__setDeviceParam(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns__setDeviceParamReq *pInData, struct ns__setDeviceParamRsp *pOutputBuf);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__deviceCtrl(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns__DeviceCtrlReq *pInData, struct ns__DeviceCtrlRsp *pOutputBuf);

#endif

/* End of soapStub.h */
